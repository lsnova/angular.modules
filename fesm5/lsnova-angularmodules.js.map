{"version":3,"file":"lsnova-angularmodules.js","sources":["ng://@lsnova/angularmodules/lib/directives/numeric/numeric-config.service.ts","ng://@lsnova/angularmodules/lib/directives/numeric/numeric.directive.ts","ng://@lsnova/angularmodules/lib/directives/numeric/numeric.module.ts","ng://@lsnova/angularmodules/lib/directives/numpad/numpad.directive.ts","ng://@lsnova/angularmodules/lib/directives/numpad/numpad.module.ts","ng://@lsnova/angularmodules/lib/directives/latin-to-greek/latin-to-greek.directive.ts","ng://@lsnova/angularmodules/lib/directives/latin-to-greek/latin-to-greek.module.ts","ng://@lsnova/angularmodules/lib/directives/capitalize/capitalize.directive.ts","ng://@lsnova/angularmodules/lib/directives/capitalize/capitalize.module.ts","ng://@lsnova/angularmodules/lib/directives/scroll-spy/scroll-spy.directive.ts","ng://@lsnova/angularmodules/lib/directives/scroll-spy/scroll-spy.module.ts","ng://@lsnova/angularmodules/lib/services/lsn-cookie/lsn-cookie.module.ts","ng://@lsnova/angularmodules/lib/services/lsn-cross-tab/lsn-cross-tab.module.ts","ng://@lsnova/angularmodules/lib/lsn-libs.module.ts","ng://@lsnova/angularmodules/lib/services/lsn-cross-tab/models/lsnCrossTabConfig.ts","ng://@lsnova/angularmodules/lib/services/lsn-cross-tab/models/lsnCrossTabMessage.ts","ng://@lsnova/angularmodules/lib/services/lsn-cookie/lsnCookieConfig.ts","ng://@lsnova/angularmodules/lib/services/lsn-cookie/lsn-cookie.service.ts","ng://@lsnova/angularmodules/lib/services/lsn-cross-tab/lsn-cross-tab.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\n\nenum NumericSeparator {\n  COMMA = ',',\n  PERIOD = '.',\n  SPACE = ' '\n}\n\nexport interface NumericConfig {\n  min?: number;\n  max?: number;\n  maxLength?: number;\n  precision?: number;\n  decimals?: string;\n  thousands?: string;\n  config?: string;\n}\n\nexport class DefaultNumericConfig implements NumericConfig {\n  min: number;\n  max: number;\n  maxLength: number;\n  precision = 0;\n  decimals: string = NumericSeparator.PERIOD;\n  thousands: string;\n\n  constructor(props = {}) {\n    Object.assign(this, props);\n  }\n}\n\nexport class CustomNumericConfig {\n  default?: NumericConfig;\n  custom?: { [key: string]: NumericConfig };\n\n  constructor(props = {}) {\n    Object.assign(this, props);\n  }\n}\n\n@Injectable()\nexport class NumericConfigService {\n  private config: CustomNumericConfig;\n\n  constructor(config: CustomNumericConfig) {\n\n    let moduleConfig = new CustomNumericConfig();\n    if (config) {\n      moduleConfig = Object.assign(moduleConfig, config);\n    }\n\n    const numericConfig = moduleConfig.default || {};\n    const customConfig = moduleConfig.custom || {};\n    this.config = new CustomNumericConfig({\n      default: new DefaultNumericConfig(numericConfig),\n      custom: customConfig,\n    });\n  }\n\n  getDefaultConfig() {\n    return this.config.default;\n  }\n\n  getCustomConfig(key) {\n    if (!this.config.custom[key]) {\n      console.warn('[lsnNumeric] Invalid config key provided.');\n    }\n    return {...this.getDefaultConfig(), ...this.config.custom[key]} || this.getDefaultConfig();\n  }\n}\n","import {Directive, ElementRef, forwardRef, HostListener, Input, OnChanges} from '@angular/core';\nimport * as keyboard from '@angular/cdk/keycodes';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {NumericConfig, NumericConfigService} from './numeric-config.service';\n\nconst CUSTOM_SELECT_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NumericDirective),\n  multi: true\n};\n\n@Directive({\n  selector: '[lsnNumeric]',\n  providers: [CUSTOM_SELECT_VALUE_ACCESSOR]\n})\nexport class NumericDirective implements OnChanges, ControlValueAccessor {\n  @Input() lsnNumeric: NumericConfig = {};\n  element: ElementRef;\n  protected config: NumericConfig;\n  public onChange = (_: any) => {\n  };\n  public onTouch = () => {\n  };\n\n  constructor(\n    private el: ElementRef,\n    private configService: NumericConfigService\n  ) {\n    this.element = el;\n    this.setConfig();\n  }\n\n  ngOnChanges() {\n    this.setConfig();\n  }\n\n  @HostListener('input', ['$event'])\n  inputHandler($event) {\n    if ($event.target.value === '-') {\n      return;\n    }\n    let value = this.removeInvalidCharacters($event.target.value);\n    value = this.handleWholesLength(value);\n    const parsedValue = this.parseValue(value);\n    const rangeValue = this.handleRange(parsedValue);\n    if (parsedValue === rangeValue) {\n      this.displayValue = value.replace(/[,|.]/, this.config.decimals);\n      this.onChange(parsedValue);\n    } else {\n      this.displayValue = rangeValue.toString().replace(/[,|.]/, this.config.decimals);\n      this.onChange(rangeValue);\n    }\n  }\n\n  @HostListener('focus', [])\n  focusHandler() {\n    this.setEditMode();\n  }\n\n  @HostListener('blur', [])\n  blurHandler() {\n    this.displayValue = this.prepareDisplayValue(this.element.nativeElement.value);\n    if (this.onTouch) {\n      // if user sets updateOn to 'blur', we have to call onTouch for it to work properly\n      this.onTouch();\n    }\n  }\n\n  public async writeValue(modelValue: string): Promise<void> {\n    let parsedValue = this.parseValue(modelValue);\n    parsedValue = this.handleRange(parsedValue);\n    this.displayValue = this.prepareDisplayValue(parsedValue);\n  }\n\n  public registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  get displayValue() {\n    return this.element.nativeElement.value;\n  }\n\n  set displayValue(value) {\n    this.element.nativeElement.value = value;\n  }\n\n  setConfig() {\n    const defaultConfig = this.lsnNumeric.config\n      ? this.configService.getCustomConfig(this.lsnNumeric.config)\n      : this.configService.getDefaultConfig();\n    this.config = Object.assign({...defaultConfig, ...this.lsnNumeric});\n    if (this.config.decimals && this.config.thousands && this.config.decimals === this.config.thousands) {\n      this.config.thousands = undefined;\n    }\n    if (this.config.max !== undefined && this.config.maxLength !== undefined) {\n      console.warn('[lsnNumeric] Setting `maxLength` makes `max` redundant.');\n    }\n  }\n\n  parseValue(value) {\n    if (!value && value !== 0) {\n      return undefined;\n    }\n    const newValue = value.toString().replace(/[,|.]/, '.');\n    const parsedValue = this.config.precision > 0\n      ? parseFloat(newValue)\n      : parseInt(newValue, 10);\n    return isNaN(parsedValue) ? undefined : parsedValue;\n  }\n\n  handleWholesLength(value) {\n    if (this.config.maxLength) {\n      const negativeSign = value.toString().startsWith('-') ? '-' : '';\n      const absoluteValue = value.toString()\n        .replace(/^-/, '')\n        .replace(/[,|.]/, this.config.decimals);\n      if (absoluteValue.toString().includes(this.config.decimals)) {\n        const [wholes, decimals] = absoluteValue.toString().split(this.config.decimals);\n        const properDecimals = this.removeInvalidCharacters(decimals, true);\n        return negativeSign + wholes.substr(0, this.config.maxLength) + this.config.decimals + properDecimals;\n      }\n      return negativeSign + absoluteValue.toString().substr(0, this.config.maxLength);\n    }\n    return value;\n  }\n\n  removeInvalidCharacters(value, allowDecimalsOnly = false) {\n    return allowDecimalsOnly\n      ? value.replace(/[^0-9]/g, '')\n      : value.replace(/[^\\-0-9,.]/g, '');\n  }\n\n  handleRange(value) {\n    if (!this.config.maxLength && this.config.max !== undefined && value > this.config.max) {\n      return this.config.max;\n    } else if (this.config.min !== undefined && value < this.config.min) {\n      return this.config.min;\n    }\n    return value;\n  }\n\n  prepareDisplayValue(value) {\n    if (!value && value !== 0) {\n      return '';\n    }\n    const [whole, decimals] = typeof value === 'number'\n      ? value.toString().split('.')\n      : value.toString().split(this.config.decimals);\n    const isNegative = whole[0] === '-';\n    let result = whole === '-' || !whole\n      ? '0'\n      : Math.abs(parseInt(whole, 10)).toString();\n    if (this.config.thousands) {\n      result = result.replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.config.thousands);\n    }\n    if (decimals && this.config.precision && this.config.decimals) {\n      result = result + this.config.decimals + decimals;\n    }\n    return isNegative && result !== '0' ? '-' + result : result;\n  }\n\n  setEditMode() {\n    if (this.config.thousands) {\n      const currentValue = this.element.nativeElement.value;\n      const [whole, decimals] = currentValue.split(this.config.decimals);\n      const regex = new RegExp('\\\\' + this.config.thousands, 'g');\n      let result = whole.replace(regex, '');\n      if (decimals && this.config.precision && this.config.decimals) {\n        result = result + this.config.decimals + decimals;\n      }\n      this.displayValue = result;\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  keyDownHandler(e: KeyboardEvent) {\n    const currentValue = this.element.nativeElement.value;\n    if (\n      // Allow special keys\n      [\n        keyboard.LEFT_ARROW,\n        keyboard.RIGHT_ARROW,\n        keyboard.BACKSPACE,\n        keyboard.DELETE,\n        keyboard.END,\n        keyboard.ENTER,\n        keyboard.ESCAPE,\n        keyboard.HOME,\n        keyboard.TAB,\n      ].indexOf(e.keyCode) !== -1\n      // Allow Ctrl+key actions\n      || (\n        [\n          keyboard.A,\n          keyboard.C,\n          keyboard.R,\n          keyboard.V,\n          keyboard.X,\n        ].indexOf(e.keyCode) !== -1\n        && (e.ctrlKey === true || e.metaKey === true)\n      )\n    ) {\n      return;  // let it happen, don't do anything\n    }\n\n    // Handle maxLength\n    const absoluteValue = currentValue.toString().replace(/^-/, '');\n    const [wholes] = absoluteValue.toString().split(this.config.decimals);\n    if (\n      this.config.maxLength !== undefined\n      && (\n        this.element.nativeElement.selectionStart < wholes.length\n        && wholes.length >= this.config.maxLength\n        && [keyboard.DASH, keyboard.NUMPAD_MINUS].indexOf(e.keyCode) === -1\n      )\n      && this.element.nativeElement.selectionEnd - this.element.nativeElement.selectionStart === 0\n    ) {\n      e.preventDefault();\n    }\n\n    // Handle minus\n    if (\n      [keyboard.DASH, keyboard.NUMPAD_MINUS].indexOf(e.keyCode) !== -1\n      && this.element.nativeElement.selectionStart === 0\n      && ((this.config.min !== undefined && this.config.min < 0) || this.config.min === undefined)\n      && currentValue.indexOf('-') === -1\n    ) {\n      return;\n    }\n\n    // Handle separator\n    if (\n      this.config.precision > 0\n      && [keyboard.COMMA, keyboard.NUMPAD_PERIOD, 190].indexOf(e.keyCode) !== -1\n      && this.element.nativeElement.selectionStart > 0\n      && currentValue.length\n      && currentValue.indexOf('.') === -1\n      && currentValue.indexOf(',') === -1\n    ) {\n      return;\n    }\n\n    // Handle key after separator\n    if (\n      this.config.precision > 0\n      && currentValue.indexOf(this.config.decimals) > -1\n      && this.element.nativeElement.selectionStart > currentValue.indexOf(this.config.decimals)\n    ) {\n      const [, decimals] = currentValue.split(this.config.decimals);\n      if (decimals && decimals.length >= this.config.precision) {\n        e.preventDefault();\n      }\n    }\n    // Ensure that it is a number or stop the keypress\n    if (\n      (\n        (\n          [\n            keyboard.ZERO,\n            keyboard.ONE,\n            keyboard.TWO,\n            keyboard.THREE,\n            keyboard.FOUR,\n            keyboard.FIVE,\n            keyboard.SIX,\n            keyboard.SEVEN,\n            keyboard.EIGHT,\n            keyboard.NINE\n          ].indexOf(e.keyCode) === -1\n          || e.shiftKey\n        )\n        &&\n        [\n          keyboard.NUMPAD_ZERO,\n          keyboard.NUMPAD_ONE,\n          keyboard.NUMPAD_TWO,\n          keyboard.NUMPAD_THREE,\n          keyboard.NUMPAD_FOUR,\n          keyboard.NUMPAD_FIVE,\n          keyboard.NUMPAD_SIX,\n          keyboard.NUMPAD_SEVEN,\n          keyboard.NUMPAD_EIGHT,\n          keyboard.NUMPAD_NINE,\n        ].indexOf(e.keyCode) === -1\n      )\n      || (\n        this.element.nativeElement.selectionStart === 0\n        && this.element.nativeElement.selectionEnd === 0\n        && currentValue.indexOf('-') > -1\n      )\n    ) {\n      e.preventDefault();\n    }\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.element.nativeElement.disabled = isDisabled;\n  }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {NumericDirective} from './numeric.directive';\nimport {NumericConfigService, CustomNumericConfig} from './numeric-config.service';\n\n@NgModule({\n  declarations: [\n    NumericDirective,\n  ],\n  exports: [\n    NumericDirective,\n  ]\n})\nexport class LsnNumericModule {\n  static forRoot(config?: CustomNumericConfig): ModuleWithProviders {\n    return {\n      ngModule: LsnNumericModule,\n      providers: [\n        NumericConfigService,\n        {provide: CustomNumericConfig, useValue: config}\n      ]\n    };\n  }\n}\n","import {Directive, ElementRef, HostListener, Input, OnChanges, Optional} from '@angular/core';\nimport * as keyboard from '@angular/cdk/keycodes';\nimport {NgControl} from '@angular/forms';\n\nclass NumPadConfig {\n  maxlength: number;\n  allowLeadingZeros = false;\n}\n\n@Directive({\n  selector: '[lsnNumPad]'\n})\nexport class NumPadDirective implements OnChanges {\n  @Input() lsnNumPad = {};\n  protected config: NumPadConfig;\n  private defaultConfig: NumPadConfig = new NumPadConfig();\n\n  constructor(private element: ElementRef, @Optional() private ngControl: NgControl) {\n  }\n\n  ngOnChanges() {\n    this.config = Object.assign({...this.defaultConfig, ...this.lsnNumPad});\n  }\n\n  @HostListener('input', ['$event'])\n  inputHandler($event) {\n    const currentValue = $event.target.value;\n    this.setValue(this.parseNewValue(currentValue));\n  }\n\n  @HostListener('blur', ['$event'])\n  blurHandler($event) {\n    const currentValue = $event.target.value;\n    this.setValue(this.parseNewValue(currentValue, true));\n  }\n\n  protected setValue(value) {\n    if (this.ngControl && this.ngControl.control) {\n      this.ngControl.control.setValue(value);\n    } else {\n      this.element.nativeElement.value = value;\n    }\n  }\n\n  protected parseNewValue(value, blurEvent = false) {\n    let newValue = value.replace(/[^0-9]/g, '');\n    if (newValue === '') {\n      return blurEvent ? '' : newValue;\n    }\n    if (this.config.maxlength && this.config.maxlength > 0) {\n      newValue = newValue.substring(0, this.config.maxlength);\n    }\n    if (!this.config.allowLeadingZeros && blurEvent) {\n      newValue = newValue.replace(/^0+/, '');\n    }\n    return newValue;\n  }\n\n  @HostListener('keydown', ['$event'])\n  keyDownHandler(e: KeyboardEvent) {\n    const currentValue = this.element.nativeElement.value;\n    if (\n      // Allow special keys\n      [\n        keyboard.LEFT_ARROW,\n        keyboard.RIGHT_ARROW,\n        keyboard.BACKSPACE,\n        keyboard.DELETE,\n        keyboard.END,\n        keyboard.ENTER,\n        keyboard.ESCAPE,\n        keyboard.HOME,\n        keyboard.TAB,\n      ].indexOf(e.keyCode) !== -1\n      // Allow Ctrl+key actions\n      || (\n        [\n          keyboard.A,\n          keyboard.C,\n          keyboard.R,\n          keyboard.V,\n          keyboard.X,\n        ].indexOf(e.keyCode) !== -1\n        && (e.ctrlKey === true || e.metaKey === true)\n      )\n    ) {\n      return;  // let it happen, don't do anything\n    }\n\n    // Ensure that it is a number or stop the keypress\n    if (\n      (\n        (\n          [\n            keyboard.ZERO,\n            keyboard.ONE,\n            keyboard.TWO,\n            keyboard.THREE,\n            keyboard.FOUR,\n            keyboard.FIVE,\n            keyboard.SIX,\n            keyboard.SEVEN,\n            keyboard.EIGHT,\n            keyboard.NINE\n          ].indexOf(e.keyCode) === -1\n          || e.shiftKey\n        )\n        &&\n        [\n          keyboard.NUMPAD_ZERO,\n          keyboard.NUMPAD_ONE,\n          keyboard.NUMPAD_TWO,\n          keyboard.NUMPAD_THREE,\n          keyboard.NUMPAD_FOUR,\n          keyboard.NUMPAD_FIVE,\n          keyboard.NUMPAD_SIX,\n          keyboard.NUMPAD_SEVEN,\n          keyboard.NUMPAD_EIGHT,\n          keyboard.NUMPAD_NINE,\n        ].indexOf(e.keyCode) === -1\n      )\n      || (\n        currentValue.length\n        && this.config.maxlength && this.config.maxlength > 0\n        && currentValue.length >= this.config.maxlength\n      )\n    ) {\n      e.preventDefault();\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {NumPadDirective} from './numpad.directive';\n\n@NgModule({\n  declarations: [\n    NumPadDirective,\n  ],\n  imports: [],\n  exports: [\n    NumPadDirective,\n  ]\n})\nexport class LsnNumpadModule {\n}\n","import {Directive, ElementRef, HostListener} from '@angular/core';\nimport {NgModel} from '@angular/forms';\n\n\n@Directive({\n  selector: '[ngModel][lsnLatinToGreek]',\n  providers: [NgModel]\n})\nexport class LatinToGreekDirective {\n\n  private latinToGreek = [\n    [/A/ig, 'Α'],\n    [/B/ig, 'Β'],\n    [/G/ig, 'Γ'],\n    [/D/ig, 'Δ'],\n    [/E/ig, 'Ε'],\n    [/Z/ig, 'Ζ'],\n    [/H/ig, 'Η'],\n    [/U/ig, 'Θ'],\n    [/I/ig, 'Ι'],\n    [/K/ig, 'Κ'],\n    [/L/ig, 'Λ'],\n    [/M/ig, 'Μ'],\n    [/N/ig, 'Ν'],\n    [/J/ig, 'Ξ'],\n    [/O/ig, 'Ο'],\n    [/P/ig, 'Π'],\n    [/R/ig, 'Ρ'],\n    [/S/ig, 'Σ'],\n    [/T/ig, 'Τ'],\n    [/Y/ig, 'Υ'],\n    [/F/ig, 'Φ'],\n    [/X/ig, 'Χ'],\n    [/C/ig, 'Ψ'],\n    [/V/ig, 'Ω'],\n    [/W/ig, 'W'],\n    [/Q/ig, 'Q']\n  ];\n\n  constructor(private model: NgModel, private el: ElementRef) {\n  }\n\n  private getCaret() {\n    return {\n      start: this.el.nativeElement.selectionStart,\n      end: this.el.nativeElement.selectionEnd,\n    };\n  }\n\n  private setCaret(start, end) {\n    this.el.nativeElement.selectionStart = start;\n    this.el.nativeElement.selectionEnd = end;\n    this.el.nativeElement.focus();\n  }\n\n\n  @HostListener('ngModelChange', ['$event'])\n  onInputChange($event) {\n    const {start, end} = this.getCaret();\n\n    let translated = $event.toLocaleUpperCase();\n    this.latinToGreek.forEach(replace => {\n      translated = translated.replace(replace[0], replace[1]);\n    });\n    this.model.valueAccessor.writeValue(translated);\n    this.setCaret(start, end);\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {LatinToGreekDirective} from './latin-to-greek.directive';\n\n@NgModule({\n  declarations: [\n    LatinToGreekDirective,\n  ],\n  imports: [],\n  exports: [\n    LatinToGreekDirective,\n  ]\n})\nexport class LsnLatinToGreekModule {\n}\n","import {Directive, HostListener} from '@angular/core';\nimport {NgModel} from '@angular/forms';\n\n@Directive({\n  selector: '[ngModel][lsnCapitalize]',\n  providers: [NgModel]\n})\nexport class CapitalizeDirective {\n  constructor(private model: NgModel) {\n  }\n\n  @HostListener('ngModelChange', ['$event'])\n  onInputChange($event) {\n    this.model.valueAccessor.writeValue($event.toLocaleUpperCase());\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CapitalizeDirective} from './capitalize.directive';\n\n@NgModule({\n  declarations: [\n    CapitalizeDirective,\n  ],\n  imports: [],\n  exports: [\n    CapitalizeDirective,\n  ]\n})\nexport class LsnCapitalizeModule {\n}\n","import { Directive, ElementRef, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter, tap } from 'rxjs/operators';\n\n@Directive({\n  selector: '[lsnScrollSpy]'\n})\nexport class ScrollSpyDirective implements OnInit, OnDestroy {\n\n  @Input()\n  spySelector: string;\n\n  @Input()\n  scrollToSection: Observable<string>;\n\n  @Output()\n  spySectionChange = new EventEmitter<string>();\n\n  private scrollOffset: number;\n  private currentSection$: Subject<string>;\n  private disableEmitter = false;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(private elementRef: ElementRef) {\n    this.currentSection$ = new Subject();\n  }\n\n  ngOnInit(): void {\n    this.scrollOffset = this.nativeElement().offsetTop;\n\n    // emit event on section change\n    const sectionChangeSub = this.currentSection$.pipe(\n      distinctUntilChanged(),\n      tap((sectionId) => this.spySectionChange.emit(sectionId))\n    ).subscribe();\n\n    // scroll to given section\n    const scrollToSub = this.scrollToSection.pipe(\n      filter((section) => !!section),\n      tap((section) => this.scrollTo(section))\n    ).subscribe();\n\n    this.subscriptions.push(sectionChangeSub, scrollToSub);\n  }\n\n  @HostListener('scroll')\n  onScroll() {\n    const section: HTMLElement = this.findCurrentSection();\n    if (section) {\n      this.setCurrentSection(section.id);\n    }\n  }\n\n  @HostListener('window:resize')\n  onResize() {\n    this.onScroll();\n  }\n\n  private scrollTo(sectionId) {\n    this.disableEmitter = true;\n\n    this.nativeElement().querySelector('#' + sectionId).scrollIntoView();\n\n    // set timeout to enforce scroll event execute before enabling back the emitter\n    setTimeout(() => {\n      this.disableEmitter = false;\n    }, 0);\n  }\n\n  private findCurrentSection(): HTMLElement {\n    const scrollMiddle = (this.scrollTopPosition() + this.scrollBottomPosition()) / 2;\n    const spiedSections = this.getSpiedSections();\n    return spiedSections.find((section) => this.isCurrentSection(section, scrollMiddle));\n  }\n\n  private getSpiedSections(): HTMLElement[] {\n    return Array.from(this.nativeElement().querySelectorAll(this.spySelector));\n  }\n\n  private isCurrentSection(section: HTMLElement, scrollMiddle: number): boolean {\n    return this.sectionTopPosition(section) <= scrollMiddle\n      && this.sectionBottomPosition(section) > scrollMiddle;\n  }\n\n  private setCurrentSection(sectionId: string) {\n    if (!this.disableEmitter) {\n      this.currentSection$.next(sectionId);\n    }\n  }\n\n  private sectionTopPosition(section: HTMLElement) {\n    return section.offsetTop;\n  }\n\n  private sectionBottomPosition(section: HTMLElement) {\n    return section.offsetTop + section.offsetHeight;\n  }\n\n  private scrollTopPosition() {\n    return this.scrollOffset + this.nativeElement().scrollTop;\n  }\n\n  private scrollBottomPosition() {\n    return this.scrollOffset + this.nativeElement().scrollTop + this.nativeElement().offsetHeight;\n  }\n\n  private nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ScrollSpyDirective } from './scroll-spy.directive';\n\n@NgModule({\n  declarations: [\n    ScrollSpyDirective,\n  ],\n  imports: [],\n  exports: [\n    ScrollSpyDirective,\n  ]\n})\nexport class LsnScrollSpyModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class LsnCookieModule { }\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LsnCookieModule} from '../lsn-cookie/lsn-cookie.module';\nimport {LsnCrossTabService} from './lsn-cross-tab.service';\n\nexport function lsnCrossTabServiceFactory(lsnCrossTabService: LsnCrossTabService) {\n  return () => lsnCrossTabService.run();\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LsnCookieModule\n  ],\n  exports: [\n    LsnCookieModule\n  ]\n})\nexport class LsnCrossTabModule {\n}\n","import {NgModule} from '@angular/core';\nimport {LsnNumericModule} from './directives/numeric/numeric.module';\nimport {LsnNumpadModule} from './directives/numpad/numpad.module';\nimport {LsnLatinToGreekModule} from './directives/latin-to-greek/latin-to-greek.module';\nimport {LsnCapitalizeModule} from './directives/capitalize/capitalize.module';\nimport {LsnScrollSpyModule} from './directives/scroll-spy/scroll-spy.module';\nimport {FormsModule} from '@angular/forms';\nimport {LsnCrossTabModule} from './services/lsn-cross-tab/lsn-cross-tab.module';\nimport {LsnCookieModule} from './services/lsn-cookie/lsn-cookie.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    FormsModule,\n    LsnCapitalizeModule,\n    LsnLatinToGreekModule,\n    LsnNumericModule.forRoot({\n      default: {\n        decimals: '.',\n        precision: 4,\n      },\n      custom: {\n        currency: {\n          decimals: ',',\n          thousands: ' ',\n          precision: 2,\n        }\n      }\n    }),\n    LsnNumpadModule,\n    LsnCookieModule,\n    LsnCrossTabModule,\n    LsnScrollSpyModule\n  ],\n  exports: [\n    LsnCapitalizeModule,\n    LsnLatinToGreekModule,\n    LsnNumericModule,\n    LsnNumpadModule,\n    LsnCookieModule,\n    LsnCrossTabModule,\n    LsnScrollSpyModule\n  ]\n})\nexport class LsnLibsModule {\n}\n","import {InjectionToken} from '@angular/core';\n\nexport class LsnCrossTabConfig {\n  cookieCleanFreq: number;\n  cookieReadFreq: number;\n  msgTtl: number; // represents duration of existence of given cross tab message, after this period from message creation, the message will be deleted from cookie\n  rootDomain: string;\n  crossTabCookieName: string;\n\n  constructor({cookieCleanFreq = null, cookieReadFreq = null, msgTtl = null, rootDomain = null, crossTabCookieName = null} = {}) {\n    this.cookieCleanFreq = cookieCleanFreq;\n    this.cookieReadFreq = cookieReadFreq;\n    this.msgTtl = msgTtl;\n    this.rootDomain = rootDomain;\n    this.crossTabCookieName = crossTabCookieName;\n  }\n}\n\nexport const LSN_CROSS_TAB_CONFIG = new InjectionToken<LsnCrossTabConfig>('LsnCrossTabConfig');\n","export class LsnCrossTabMessage<T extends object = any> {\n  created?: number;\n  code?: string;\n  tabId?: string;\n  attrs?: T;\n\n  constructor({created = null, code = null, tabId = null, attrs = null}: LsnCrossTabMessage<T> = {}) {\n    this.created = created;\n    this.code = code;\n    this.tabId = tabId;\n    this.attrs = attrs;\n  }\n\n  static compare(firstMessage: LsnCrossTabMessage, secondMessage: LsnCrossTabMessage) {\n    if (!firstMessage || !secondMessage) {\n      return false;\n    }\n    if (firstMessage.created !== secondMessage.created) {\n      return false;\n    }\n    if (firstMessage.code !== secondMessage.code) {\n      return false;\n    }\n    return firstMessage.tabId !== secondMessage.tabId;\n  }\n}\n","import {InjectionToken} from '@angular/core';\n\nexport class LsnCookieConfig {\n  secureCookies: boolean;\n  domainCookies: boolean;\n\n  constructor({\n                secureCookies = null, domainCookies = null\n              } = {}) {\n    this.secureCookies = secureCookies;\n    this.domainCookies = domainCookies;\n  }\n}\n\nexport const LSN_COOKIE_CONFIG = new InjectionToken<LsnCookieConfig>('LsnCookieConfig');\n","import {Inject, Injectable} from '@angular/core';\nimport {LSN_COOKIE_CONFIG, LsnCookieConfig} from './lsnCookieConfig';\nimport {DOCUMENT} from '@angular/common';\n\nexport interface LsnCookieOptions {\n  expires?: number | Date;\n  expirationUnit?: string;\n  path?: string;\n  domain?: string | boolean;\n  secure?: boolean;\n}\n\nexport interface CookieService {\n  set(cookieKey: string, cookieValue, cookieOptions: LsnCookieOptions): void;\n\n  get(cookieKey?: string): any;\n\n  remove(cookieKey: string, cookieOptions: LsnCookieOptions): void;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LsnCookieService implements CookieService {\n\n  constructor(@Inject(LSN_COOKIE_CONFIG) private cookieConfig: LsnCookieConfig, @Inject(DOCUMENT) readonly document: any) {\n  }\n\n  /**\n   * Sets cookie with given key to given value, cookie options are optional, if not set, some properties\n   * (secure and domain) will be set from global cookie config\n   */\n  set(cookieKey: string, cookieValue: any, cookieOptions?: LsnCookieOptions) {\n    const options = {\n      ...cookieOptions,\n      secure: cookieOptions && cookieOptions.secure ? cookieOptions.secure : this.cookieConfig.secureCookies\n    };\n    if (!this.cookieConfig.domainCookies) {\n      options.domain = false;\n    }\n    const value = JSON.stringify(cookieValue);\n    let expiresFor;\n\n    if (typeof options.expires === 'number') {\n      expiresFor = options.expires;\n      options.expires = new Date();\n      // Trying to delete a cookie; set a date far in the past\n      if (expiresFor === -1) {\n        options.expires = new Date('Thu, 01 Jan 1970 00:00:00 GMT');\n      } else if (options.expirationUnit) {\n        if (options.expirationUnit === 'hours') {\n          options.expires.setHours(options.expires.getHours() + expiresFor);\n        } else if (options.expirationUnit === 'minutes') {\n          options.expires.setMinutes(options.expires.getMinutes() + expiresFor);\n        } else if (options.expirationUnit === 'seconds') {\n          options.expires.setSeconds(options.expires.getSeconds() + expiresFor);\n        } else if (options.expirationUnit === 'milliseconds') {\n          options.expires.setMilliseconds(options.expires.getMilliseconds() + expiresFor);\n        } else {\n          options.expires.setDate(options.expires.getDate() + expiresFor);\n        }\n      } else {\n        options.expires.setDate(options.expires.getDate() + expiresFor);\n      }\n    }\n    this.document.cookie = [\n      encodeURIComponent(cookieKey),\n      '=',\n      encodeURIComponent(value),\n      options.expires ? '; expires=' + options.expires.toUTCString() : '',\n      options.path ? '; path=' + options.path : '',\n      options.domain ? '; domain=' + options.domain : '',\n      options.secure ? '; secure' : ''\n    ].join('');\n  }\n\n  /**\n   * Key provided - returns value of given cookie or undefined if non existent\n   * Key not provided - returns all cookies as Object or undefined if there are no cookies\n   * Cookie values are JSON.parsed, if error occurs during parsing, string value is assigned\n   */\n  get(cookieKey?: string): any {\n    const cookieStringList: Array<String> = this.document.cookie ? this.document.cookie.split('; ') : [];\n\n    const cookieObject = cookieStringList\n      .map(cookieString => {\n        const pos = cookieString.indexOf('=');\n        return {\n          name: cookieString.substr(0, pos),\n          value: decodeURIComponent(cookieString.substr(pos + 1))\n        };\n      }).filter(cookie => {\n        return typeof cookie.value !== 'undefined' && (cookieKey === undefined || cookieKey === cookie.name);\n      }).reduce((previousValue: object, currentValue: { name: string, value: any }) => {\n        let value = null;\n        try {\n          value = JSON.parse(currentValue.value);\n        } catch (e) {\n          value = currentValue.value;\n        }\n        previousValue[currentValue.name] = value;\n        return previousValue;\n      }, {});\n    return cookieKey ? cookieObject[cookieKey] : Object.keys(cookieObject).length > 0 ? cookieObject : undefined;\n  }\n\n  remove(cookieKey: string, cookieOptions: LsnCookieOptions = {}) {\n    const cookie = this.get(cookieKey);\n\n    if (cookie) {\n      cookieOptions.expires = -1;\n      this.set(cookieKey, '', cookieOptions);\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","import {Inject, Injectable, OnDestroy, Optional} from '@angular/core';\nimport {interval, Observable, Subject, Subscription} from 'rxjs';\nimport {LsnCrossTabMessage} from './models/lsnCrossTabMessage';\nimport {LSN_CROSS_TAB_CONFIG, LsnCrossTabConfig} from './models/lsnCrossTabConfig';\nimport {LsnCookieService} from '../lsn-cookie/lsn-cookie.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LsnCrossTabService implements OnDestroy {\n  private readonly messageSubject: Subject<LsnCrossTabMessage>;\n  readonly tabId: string;\n  private readonly messagesReadSet: Set<string>;\n  private readonly tabOpenTime: number;\n  private cookieReadSubscription: Subscription;\n  private cookieCleanSubscription: Subscription;\n  private crossTabConfig: LsnCrossTabConfig;\n\n  private get crossTabCookieName(): string {\n    return this.crossTabConfig.crossTabCookieName;\n  }\n\n  constructor(private lsnCookieService: LsnCookieService,\n              @Optional() @Inject(LSN_CROSS_TAB_CONFIG) crossTabConfig: LsnCrossTabConfig) {\n    this.crossTabConfig = crossTabConfig || new LsnCrossTabConfig();\n    this.messageSubject = new Subject<LsnCrossTabMessage>();\n    this.tabId = Math.random() + '';\n    this.messagesReadSet = new Set<string>();\n    this.tabOpenTime = Date.now();\n  }\n\n  /**\n   * This function sets up subscriptions for reading and cleaning cross tab cookie\n   */\n  run(): void {\n    if (!this.cookieReadSubscription) {\n      this.cookieReadSubscription = interval(this.crossTabConfig.cookieReadFreq)\n        .subscribe(() => this.readMessages());\n    }\n    if (!this.cookieCleanSubscription) {\n      this.cookieCleanSubscription = interval(this.crossTabConfig.cookieCleanFreq)\n        .subscribe(() => this.cleanCookie());\n    }\n  }\n\n  /**\n   * This Observable emits messages that were sent by other tabs\n   */\n  get messages$(): Observable<LsnCrossTabMessage> {\n    return this.messageSubject;\n  }\n\n  /**\n   * Manually set cross tab config, for example when config must be provided asynchronously and not with InjectionToken\n   */\n  setCrossTabConfig(config: LsnCrossTabConfig) {\n    this.crossTabConfig = config;\n  }\n\n  /**\n   * Sends message to other tabs by adding this message to cross tab cookie\n   */\n  sendMessage(data: (string | LsnCrossTabMessage | object)) {\n    let message;\n    if (typeof data === 'string') {\n      message = new LsnCrossTabMessage({code: data});\n    } else if (data instanceof LsnCrossTabMessage) {\n      message = data;\n    } else if (!!data && typeof data === 'object' && !Array.isArray(data)) {\n      message = new LsnCrossTabMessage({...data});\n    } else {\n      return;\n    }\n    // previous implementation, message.created is always overridden\n    message.created = new Date().getTime();\n    message.tabId = this.tabId;\n    this.messagesReadSet.add(this.getMessageId(message));\n    this.updateCookie(this.messageToPlainObject(message));\n  }\n\n  /**\n   * Checks if message with given id was already read\n   */\n  private messageWasRead = (msg: LsnCrossTabMessage): boolean => this.messagesReadSet.has(this.getMessageId(msg));\n\n  private getMessageId = (message: LsnCrossTabMessage): string => message.tabId + message.created + message.code;\n\n  private messageToPlainObject = (msg: LsnCrossTabMessage): object => Object.keys(msg)\n    .reduce((minifiedObj, key) => {\n      const value = msg[key];\n      if (!(key === 'attrs' && (value === null || value === {}))) {\n        minifiedObj[key] = value;\n        return minifiedObj;\n      } else {\n        return minifiedObj;\n      } // tslint:disable\n    }, {}); // tslint:enable\n\n  /**\n   * Appends given message to cross tab cookie value\n   */\n  private updateCookie(msg: object) {\n    const cookieData: Array<LsnCrossTabMessage> = this.cookie;\n    cookieData.push(msg);\n    this.cookie = cookieData;\n  }\n\n  private get cookie() {\n    return this.lsnCookieService.get(this.crossTabConfig.crossTabCookieName) || [];\n  }\n\n  private set cookie(cookieData: Array<LsnCrossTabMessage>) {\n    this.lsnCookieService.set(this.crossTabCookieName, cookieData, {\n      domain: this.crossTabConfig.rootDomain,\n      path: '/'\n    });\n  }\n\n  /**\n   * Removes messages from cross tab cookie that are older than supplied config.msgTtl time\n   */\n  private cleanCookie() {\n    const currentCookie = this.cookie;\n    if (currentCookie === null) {\n      return;\n    }\n\n    const timestamp = new Date().getTime();\n    const cleanedCookie = currentCookie.filter(this.cleanCookieFilter(timestamp, this.crossTabConfig.msgTtl));\n    // previous implementation, cookie might have been modified in the other tab?\n    if (!this.areCookiesEqual(currentCookie, this.cookie)) {\n      return;\n    }\n\n    this.cookie = cleanedCookie;\n  }\n\n  /**\n   * Callback invoked after every cookie read interval\n   */\n  private readMessages() {\n    if (this.cookie) {\n      this.cookie.forEach((msgData: LsnCrossTabMessage) => {\n        if (msgData.created > this.tabOpenTime) {\n          const msgCopy = {...msgData};\n          if (!this.messageWasRead(msgCopy)) {\n            this.messagesReadSet.add(this.getMessageId(msgCopy));\n            this.messageSubject.next(msgCopy);\n          }\n        }\n      });\n    }\n  }\n\n  getCookie = () => this.cookie;\n\n  /**\n   * Removes all subscriptions that this service is subscribe to (intervals are cleared)\n   */\n  unsubscribe() {\n    this.cookieReadSubscription.unsubscribe();\n    this.cookieCleanSubscription.unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe();\n  }\n\n  /**\n   * Sorts two cookie arrays and compares each element\n   */\n  private areCookiesEqual(firstCookie: Array<LsnCrossTabMessage>, secondCookie: Array<LsnCrossTabMessage>) {\n    if (firstCookie.length !== secondCookie.length) {\n      return false;\n    } else if (firstCookie.length === 0 && secondCookie.length === 0) {\n      return true;\n    }\n    firstCookie.sort(this.messageComparer);\n    secondCookie.sort(this.messageComparer);\n    let index = 0;\n    let areCookiesEqual = true;\n    for (const message of firstCookie) {\n      if (LsnCrossTabMessage.compare(message, secondCookie[index])) {\n        areCookiesEqual = false;\n      } else {\n        ++index;\n      }\n    }\n    return areCookiesEqual;\n  }\n\n  /**\n   * Compares two messages by properties in order: 'created', 'code', 'tabId';\n   */\n  private messageComparer(firstCookieValue: LsnCrossTabMessage, secondCookieValue: LsnCrossTabMessage) {\n    let result = firstCookieValue.created < secondCookieValue.created ? -1 : secondCookieValue.created < firstCookieValue.created ? 1 : 0;\n    if (result === 0) {\n      result = firstCookieValue.code < secondCookieValue.code ? -1 : secondCookieValue.code < firstCookieValue.code ? 1 : 0;\n      if (result === 0) {\n        result = firstCookieValue.tabId < secondCookieValue.tabId ? -1 : secondCookieValue.tabId < firstCookieValue.tabId ? 1 : 0;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Function determines whether given message is to be removed from the cross tab cookie\n   */\n  private cleanCookieFilter(timestamp: number, msgTtl: number) {\n    return (cookieMessage: LsnCrossTabMessage) => timestamp - cookieMessage.created <= msgTtl;\n  }\n\n}\n"],"names":["keyboard.LEFT_ARROW","keyboard.RIGHT_ARROW","keyboard.BACKSPACE","keyboard.DELETE","keyboard.END","keyboard.ENTER","keyboard.ESCAPE","keyboard.HOME","keyboard.TAB","keyboard.A","keyboard.C","keyboard.R","keyboard.V","keyboard.X","keyboard.DASH","keyboard.NUMPAD_MINUS","keyboard.COMMA","keyboard.NUMPAD_PERIOD","keyboard.ZERO","keyboard.ONE","keyboard.TWO","keyboard.THREE","keyboard.FOUR","keyboard.FIVE","keyboard.SIX","keyboard.SEVEN","keyboard.EIGHT","keyboard.NINE","keyboard.NUMPAD_ZERO","keyboard.NUMPAD_ONE","keyboard.NUMPAD_TWO","keyboard.NUMPAD_THREE","keyboard.NUMPAD_FOUR","keyboard.NUMPAD_FIVE","keyboard.NUMPAD_SIX","keyboard.NUMPAD_SEVEN","keyboard.NUMPAD_EIGHT","keyboard.NUMPAD_NINE"],"mappings":"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"}