{"version":3,"file":"lsnova-angularmodules-adv-chatbot.js","sources":["../../../projects/lsn-libs/adv-chatbot/adv-chatbot.model.ts","../../../projects/lsn-libs/adv-chatbot/adv-chatbot.helper.ts","../../../projects/lsn-libs/adv-chatbot/adv-chatbot.module.ts","../../../projects/lsn-libs/adv-chatbot/abstract-adv-chatbot.component.ts","../../../projects/lsn-libs/adv-chatbot/lsnova-angularmodules-adv-chatbot.ts"],"sourcesContent":["import {InjectionToken, Type} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nexport const ADV_CHATBOT_CONFIG = new InjectionToken<AdvChatbotModuleConfig>('AdvChatbotModuleConfig');\n\nexport interface AdvChatbotModuleConfig {\n  dataProviders?: Type<AdvChatbotDataProvider>[];\n}\n\nexport interface AdvChatbotGlobal {\n  initWidget: (config: AdvChatbotGlobalConfig) => Promise<any>;\n}\n\nexport interface AdvChatbotWidget {\n  toggleWidget: () => void;\n  hideWidget: () => void;\n  showWidget: () => void;\n}\n\nexport enum AdvChatbotEvents {\n  newMessage = 'newMessage'\n}\n\nexport interface AdvChatbotEvent {\n  type: AdvChatbotEvents;\n  value: any;\n}\n\nexport interface AdvChatbotDataProvider {\n  getData(chatBotConfig: AdvChatbotWidgetConfig): Observable<object>;\n}\n\nexport class AdvChatbotWidgetConfig {\n  enabled?: boolean;\n  sdkUrl?: string;\n  cid?: string;\n  baseUrl?: string;\n  audioFile?: string;\n  layout?: any;\n  theme?: { [key: string]: string };\n  translations?: { [key: string]: string };\n}\n\nexport interface AdvChatbotGlobalConfig extends AdvChatbotWidgetConfig {\n  getCustomerData: (done: (err, data) => void) => void;\n  newMessageEvent: (boolean) => void;\n}\n\n","import {Inject, Injectable, Injector, Optional, Renderer2, RendererFactory2} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  ADV_CHATBOT_CONFIG,\n  AdvChatbotDataProvider,\n  AdvChatbotEvent,\n  AdvChatbotEvents,\n  AdvChatbotGlobal,\n  AdvChatbotModuleConfig,\n  AdvChatbotWidget,\n  AdvChatbotWidgetConfig\n} from './adv-chatbot.model';\nimport {forkJoin, Observable, Subject} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n@Injectable()\nexport class AdvChatbotHelper {\n\n  protected renderer: Renderer2;\n  protected widget: AdvChatbotWidget;\n  protected events$ = new Subject<AdvChatbotEvent>();\n  protected dataProviders: AdvChatbotDataProvider[] = [];\n\n  get events(): Observable<AdvChatbotEvent> {\n    return this.events$.asObservable();\n  }\n\n  get isInitialized() {\n    return !!this.widget;\n  }\n\n  constructor(@Inject(DOCUMENT) protected document,\n              rendererFactory2: RendererFactory2,\n              @Optional() @Inject(ADV_CHATBOT_CONFIG) protected moduleConfig: AdvChatbotModuleConfig,\n              protected injector: Injector) {\n    this.renderer = rendererFactory2.createRenderer(document, null);\n    if (this.moduleConfig?.dataProviders?.length) {\n      for (const providerClass of this.moduleConfig.dataProviders) {\n        this.dataProviders.push(this.injector.get(providerClass));\n      }\n    }\n  }\n\n  async setupSdk(config: AdvChatbotWidgetConfig, awaitConfig = false) {\n    if (config.sdkUrl) {\n      await this.loadScript(config.sdkUrl);\n      const advGlobal: AdvChatbotGlobal = (this.document.defaultView as any).ADV;\n      const configPromise = this.setConfig(advGlobal, config);\n      if (awaitConfig) {\n        await configPromise;\n      }\n    }\n  }\n\n  protected loadScript(scriptUrl: string): Promise<any> {\n    return new Promise((resolve => {\n      const chatBotScriptFound = this.checkScriptLoaded(scriptUrl);\n      if (!chatBotScriptFound) {\n        const script: HTMLScriptElement = this.renderer.createElement('script');\n        this.renderer.appendChild(document.head, script);\n        script.type = 'text/javascript';\n        script.async = false;\n        script.charset = 'utf-8';\n        // load listener first in case script is cached\n        script.addEventListener('load', () => {\n          resolve(true);\n        });\n        script.src = scriptUrl;\n      } else {\n        resolve(true);\n      }\n    }));\n  }\n\n  /**\n   * check if any script on page includes one with src = apiUrl\n   */\n  protected checkScriptLoaded(scriptUrl: string): boolean {\n    const scripts: HTMLCollection = this.document.getElementsByTagName('script');\n    return Array.from(scripts)?.some((scriptEl: HTMLScriptElement) => scriptEl.src?.includes(scriptUrl)) ?? false;\n  }\n\n  protected async setConfig(advGlobal: AdvChatbotGlobal, chatbotConfig: AdvChatbotWidgetConfig) {\n    this.widget = await advGlobal.initWidget({\n      cid: chatbotConfig.cid,\n      baseUrl: chatbotConfig.baseUrl,\n      layout: chatbotConfig.layout,\n      theme: chatbotConfig.theme,\n      translations: chatbotConfig.translations,\n      getCustomerData: done => {\n        this.getDataForWidget(chatbotConfig)\n          .subscribe({\n            // check status 200?\n            next: resp => {\n              done(null, resp);\n            },\n            error: err => done(err, null)\n          });\n      },\n      newMessageEvent: isWidgetOpen => {\n        this.events$.next({\n          type: AdvChatbotEvents.newMessage,\n          value: !isWidgetOpen // mark new message as unread\n        });\n      }\n    });\n  }\n\n  /**\n   * manual click on chatbot icon, setup sdk if not loaded\n   */\n  async toggleVisibility(config: AdvChatbotWidgetConfig): Promise<any> {\n    if (this.widget) {\n      this.widget.toggleWidget();\n    } else {\n      await this.setupSdk(config, true);\n      this.widget.toggleWidget();\n    }\n  }\n\n  protected getDataForWidget(chatbotConfig: AdvChatbotWidgetConfig): Observable<object> {\n    const obs$: Observable<object>[] = this.dataProviders?.map(provider => provider.getData(chatbotConfig));\n    return forkJoin(obs$).pipe(\n      map(outputs => Object.assign({}, ...outputs))\n    );\n  }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ADV_CHATBOT_CONFIG, AdvChatbotModuleConfig} from './adv-chatbot.model';\nimport {AdvChatbotHelper} from './adv-chatbot.helper';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ]\n})\nexport class LsnAdvChatbotModule {\n  static forRoot(config: AdvChatbotModuleConfig = {}): ModuleWithProviders<LsnAdvChatbotModule> {\n    return {\n      ngModule: LsnAdvChatbotModule,\n      providers: [\n        {provide: ADV_CHATBOT_CONFIG, useValue: config},\n        AdvChatbotHelper\n      ]\n    };\n  }\n}\n","import {ChangeDetectorRef, Component, OnDestroy, OnInit} from '@angular/core';\nimport {AdvChatbotHelper} from './adv-chatbot.helper';\nimport {Subscription} from 'rxjs';\nimport {AdvChatbotEvent, AdvChatbotEvents, AdvChatbotWidgetConfig} from \"./adv-chatbot.model\";\n\n@Component({\n  template: ''\n})\nexport abstract class AbstractAdvChatbotComponent implements OnInit, OnDestroy {\n\n  protected eventsSub: Subscription;\n  unreadMessages = false;\n  abstract audioSrc: string;\n  protected audio: HTMLAudioElement;\n\n  constructor(protected chatBotHelper: AdvChatbotHelper,\n              protected cd: ChangeDetectorRef) {\n  }\n\n  ngOnInit() {\n    this.audio = new Audio(this.audioSrc);\n    this.eventsSub = this.chatBotHelper.events\n      .subscribe(this.handleEvent.bind(this));\n  }\n\n  toggleVisibility(config: AdvChatbotWidgetConfig) {\n    // when opening widget, remove unread messages mark\n    this.unreadMessages = false;\n    this.chatBotHelper.toggleVisibility(config);\n  }\n\n  playAudio() {\n    if (this.audio.paused) {\n      this.audio.play();\n    } else {\n      // if audio is playing, reset it (immediately plays again)\n      this.audio.currentTime = 0;\n    }\n  }\n\n  protected handleEvent(event: AdvChatbotEvent) {\n    if (event.type === AdvChatbotEvents.newMessage) {\n      this.unreadMessages = event.value;\n      this.playAudio();\n    }\n    this.cd.markForCheck();\n  }\n\n  ngOnDestroy() {\n    this.eventsSub?.unsubscribe();\n  }\n\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}