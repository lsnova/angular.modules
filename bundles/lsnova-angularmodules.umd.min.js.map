{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@lsnova/angularmodules/lib/directives/numeric/numeric-config.service.ts","ng://@lsnova/angularmodules/lib/directives/numeric/numeric.directive.ts","ng://@lsnova/angularmodules/lib/directives/numeric/numeric.module.ts","ng://@lsnova/angularmodules/lib/directives/numpad/numpad.directive.ts","ng://@lsnova/angularmodules/lib/directives/numpad/numpad.module.ts","ng://@lsnova/angularmodules/lib/directives/latin-to-greek/latin-to-greek.directive.ts","ng://@lsnova/angularmodules/lib/directives/latin-to-greek/latin-to-greek.module.ts","ng://@lsnova/angularmodules/lib/directives/capitalize/capitalize.directive.ts","ng://@lsnova/angularmodules/lib/directives/capitalize/capitalize.module.ts","ng://@lsnova/angularmodules/lib/directives/scroll-spy/scroll-spy.directive.ts","ng://@lsnova/angularmodules/lib/directives/scroll-spy/scroll-spy.module.ts","ng://@lsnova/angularmodules/lib/services/lsn-cookie/lsn-cookie.module.ts","ng://@lsnova/angularmodules/lib/services/lsn-cross-tab/lsn-cross-tab.module.ts","ng://@lsnova/angularmodules/lib/lsn-libs.module.ts","ng://@lsnova/angularmodules/lib/services/lsn-cross-tab/models/lsnCrossTabConfig.ts","ng://@lsnova/angularmodules/lib/services/lsn-cross-tab/models/lsnCrossTabMessage.ts","ng://@lsnova/angularmodules/lib/services/lsn-cookie/lsnCookieConfig.ts","ng://@lsnova/angularmodules/lib/services/lsn-cookie/lsn-cookie.service.ts","ng://@lsnova/angularmodules/lib/services/lsn-cross-tab/lsn-cross-tab.service.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","__read","r","ar","error","NumericSeparator","props","precision","decimals","NumericConfigService","config","moduleConfig","CustomNumericConfig","numericConfig","default","customConfig","custom","DefaultNumericConfig","getDefaultConfig","getCustomConfig","key","console","warn","Injectable","CUSTOM_SELECT_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","NumericDirective","multi","NumericMessage","ADDITIONAL_DECIMAL_SEPARATOR","el","configService","lsnNumeric","lsnNumericMessages","EventEmitter","onChange","onTouch","element","setConfig","ngOnChanges","inputHandler","$event","target","removeInvalidCharacters","handleWholesLength","parsedValue","parseValue","displayValue","replace","focusHandler","setEditMode","blurHandler","nativeElement","rangeValue","handleRange","toString","isNaN","stepValue","handleStep","prepareDisplayValue","writeValue","modelValue","registerOnChange","fn","registerOnTouched","defineProperty","defaultConfig","thousands","undefined","max","maxLength","newValue","parseFloat","parseInt","negativeSign","startsWith","absoluteValue","includes","_a","split","wholes","properDecimals","substr","allowDecimalsOnly","cleanUp","input","firstIndex","String","indexOf","secondIndex","emit","min","Math","round","whole","isNegative","abs","regex","RegExp","keyDownHandler","currentValue","keyboard.LEFT_ARROW","keyboard.RIGHT_ARROW","keyboard.BACKSPACE","keyboard.DELETE","keyboard.END","keyboard.ENTER","keyboard.ESCAPE","keyboard.HOME","keyboard.TAB","keyCode","keyboard.A","keyboard.C","keyboard.R","keyboard.V","keyboard.X","ctrlKey","metaKey","selectionStart","keyboard.DASH","keyboard.NUMPAD_MINUS","selectionEnd","preventDefault","keyboard.COMMA","keyboard.NUMPAD_PERIOD","keyboard.ZERO","keyboard.ONE","keyboard.TWO","keyboard.THREE","keyboard.FOUR","keyboard.FIVE","keyboard.SIX","keyboard.SEVEN","keyboard.EIGHT","keyboard.NINE","shiftKey","keyboard.NUMPAD_ZERO","keyboard.NUMPAD_ONE","keyboard.NUMPAD_TWO","keyboard.NUMPAD_THREE","keyboard.NUMPAD_FOUR","keyboard.NUMPAD_FIVE","keyboard.NUMPAD_SIX","keyboard.NUMPAD_SEVEN","keyboard.NUMPAD_EIGHT","keyboard.NUMPAD_NINE","setDisabledState","isDisabled","disabled","Directive","args","selector","providers","ElementRef","Input","Output","HostListener","LsnNumericModule","forRoot","ngModule","useValue","NgModule","declarations","exports","NumPadConfig","allowLeadingZeros","NumPadDirective","ngControl","lsnNumPad","setValue","parseNewValue","control","blurEvent","maxlength","substring","NgControl","decorators","type","Optional","LsnNumpadModule","imports","LatinToGreekDirective","model","latinToGreek","getCaret","start","end","setCaret","focus","onInputChange","translated","toLocaleUpperCase","forEach","valueAccessor","NgModel","LsnLatinToGreekModule","CapitalizeDirective","LsnCapitalizeModule","ScrollSpyDirective","elementRef","spySectionChange","disableEmitter","subscriptions","currentSection$","Subject","ngOnInit","_this","scrollOffset","offsetTop","sectionChangeSub","pipe","distinctUntilChanged","tap","sectionId","subscribe","scrollToSub","scrollToSection","filter","section","scrollTo","onScroll","findCurrentSection","setCurrentSection","id","onResize","querySelector","scrollIntoView","setTimeout","scrollMiddle","scrollTopPosition","scrollBottomPosition","getSpiedSections","find","isCurrentSection","Array","from","querySelectorAll","spySelector","sectionTopPosition","sectionBottomPosition","offsetHeight","scrollTop","ngOnDestroy","sub","unsubscribe","LsnScrollSpyModule","LsnCookieModule","CommonModule","LsnCrossTabModule","LsnLibsModule","FormsModule","currency","_b","_c","cookieCleanFreq","_d","cookieReadFreq","_e","msgTtl","_f","rootDomain","_g","crossTabCookieName","LSN_CROSS_TAB_CONFIG","InjectionToken","LsnCrossTabMessage","created","code","tabId","attrs","compare","firstMessage","secondMessage","secureCookies","domainCookies","LSN_COOKIE_CONFIG","LsnCookieService","cookieConfig","document","set","cookieKey","cookieValue","cookieOptions","options","secure","domain","expiresFor","JSON","stringify","expires","Date","expirationUnit","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","setDate","getDate","cookie","encodeURIComponent","toUTCString","path","join","get","cookieObject","map","cookieString","pos","name","decodeURIComponent","reduce","previousValue","parse","keys","remove","providedIn","LsnCookieConfig","Inject","DOCUMENT","LsnCrossTabService","lsnCookieService","crossTabConfig","messageWasRead","msg","messagesReadSet","has","getMessageId","message","messageToPlainObject","minifiedObj","getCookie","LsnCrossTabConfig","messageSubject","random","Set","tabOpenTime","now","run","cookieReadSubscription","interval","readMessages","cookieCleanSubscription","cleanCookie","setCrossTabConfig","sendMessage","data","isArray","getTime","add","updateCookie","cookieData","currentCookie","timestamp","cleanedCookie","cleanCookieFilter","areCookiesEqual","msgData","msgCopy","firstCookie","secondCookie","sort","messageComparer","index","firstCookie_1","firstCookie_1_1","firstCookieValue","secondCookieValue","cookieMessage","lsnCrossTabService"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {Injectable} from '@angular/core';\n\nenum NumericSeparator {\n  COMMA = ',',\n  PERIOD = '.',\n  SPACE = ' '\n}\n\nexport interface NumericConfig {\n  min?: number;\n  max?: number;\n  maxLength?: number;\n  precision?: number;\n  decimals?: string;\n  thousands?: string;\n  config?: string;\n  step?: number;\n}\n\nexport class DefaultNumericConfig implements NumericConfig {\n  min: number;\n  max: number;\n  maxLength: number;\n  precision = 0;\n  decimals: string = NumericSeparator.PERIOD;\n  thousands: string;\n  step: number;\n\n  constructor(props = {}) {\n    Object.assign(this, props);\n  }\n}\n\nexport class CustomNumericConfig {\n  default?: NumericConfig;\n  custom?: { [key: string]: NumericConfig };\n\n  constructor(props = {}) {\n    Object.assign(this, props);\n  }\n}\n\n@Injectable()\nexport class NumericConfigService {\n  private config: CustomNumericConfig;\n\n  constructor(config: CustomNumericConfig) {\n\n    let moduleConfig = new CustomNumericConfig();\n    if (config) {\n      moduleConfig = Object.assign(moduleConfig, config);\n    }\n\n    const numericConfig = moduleConfig.default || {};\n    const customConfig = moduleConfig.custom || {};\n    this.config = new CustomNumericConfig({\n      default: new DefaultNumericConfig(numericConfig),\n      custom: customConfig,\n    });\n  }\n\n  getDefaultConfig() {\n    return this.config.default;\n  }\n\n  getCustomConfig(key) {\n    if (!this.config.custom[key]) {\n      console.warn('[lsnNumeric] Invalid config key provided.');\n    }\n    return {...this.getDefaultConfig(), ...this.config.custom[key]} || this.getDefaultConfig();\n  }\n}\n","import {Directive, ElementRef, EventEmitter, forwardRef, HostListener, Input, OnChanges, Output} from '@angular/core';\nimport * as keyboard from '@angular/cdk/keycodes';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {NumericConfig, NumericConfigService} from './numeric-config.service';\n\nconst CUSTOM_SELECT_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NumericDirective),\n  multi: true\n};\n\nexport enum NumericMessage {\n  ADDITIONAL_DECIMAL_SEPARATOR\n}\n\n@Directive({\n  selector: '[lsnNumeric]',\n  providers: [CUSTOM_SELECT_VALUE_ACCESSOR]\n})\nexport class NumericDirective implements OnChanges, ControlValueAccessor {\n  @Input() lsnNumeric: NumericConfig = {};\n  @Output() lsnNumericMessages = new EventEmitter<NumericMessage>();\n  element: ElementRef;\n  protected config: NumericConfig;\n  public onChange = (_: any) => {\n  }\n  public onTouch = () => {\n  }\n\n  constructor(\n    private el: ElementRef,\n    private configService: NumericConfigService\n  ) {\n    this.element = el;\n    this.setConfig();\n  }\n\n  ngOnChanges() {\n    this.setConfig();\n  }\n\n  @HostListener('input', ['$event'])\n  inputHandler($event) {\n    if ($event.target.value === '-') {\n      return;\n    }\n    let value = this.removeInvalidCharacters($event.target.value);\n    value = this.handleWholesLength(value);\n    const parsedValue = this.parseValue(value);\n    this.displayValue = value.replace(/[,|.]/, this.config.decimals);\n    this.onChange(parsedValue);\n  }\n\n  @HostListener('focus', [])\n  focusHandler() {\n    this.setEditMode();\n  }\n\n  @HostListener('blur', [])\n  blurHandler() {\n    const parsedValue: number = this.parseValue(this.element.nativeElement.value);\n    const rangeValue = this.handleRange(parsedValue);\n    // correct entered value on blur to proper range value\n    if (parsedValue !== rangeValue) {\n      this.displayValue = rangeValue.toString().replace(/[,|.]/, this.config.decimals);\n      this.onChange(rangeValue);\n    } else if (this.config.step && !isNaN(parsedValue)) {\n      // correct entered value on blur to proper step value\n      const stepValue = this.handleStep(parsedValue);\n      this.displayValue = stepValue.toString().replace(/[,|.]/, this.config.decimals);\n      this.onChange(stepValue);\n    }\n    this.displayValue = this.prepareDisplayValue(this.element.nativeElement.value);\n    if (this.onTouch) {\n      // if user sets updateOn to 'blur', we have to call onTouch for it to work properly\n      this.onTouch();\n    }\n  }\n\n  public async writeValue(modelValue: string): Promise<void> {\n    const parsedValue = this.parseValue(modelValue);\n    this.displayValue = this.prepareDisplayValue(parsedValue);\n  }\n\n  public registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  get displayValue() {\n    return this.element.nativeElement.value;\n  }\n\n  set displayValue(value) {\n    this.element.nativeElement.value = value;\n  }\n\n  setConfig() {\n    const defaultConfig = this.lsnNumeric.config\n      ? this.configService.getCustomConfig(this.lsnNumeric.config)\n      : this.configService.getDefaultConfig();\n    this.config = Object.assign({...defaultConfig, ...this.lsnNumeric});\n    if (this.config.decimals && this.config.thousands && this.config.decimals === this.config.thousands) {\n      this.config.thousands = undefined;\n    }\n    if (this.config.max !== undefined && this.config.maxLength !== undefined) {\n      console.warn('[lsnNumeric] Setting `maxLength` makes `max` redundant.');\n    }\n  }\n\n  parseValue(value) {\n    if (!value && value !== 0) {\n      return undefined;\n    }\n    const newValue = value.toString().replace(/[,|.]/, '.');\n    const parsedValue = this.config.precision > 0\n      ? parseFloat(newValue)\n      : parseInt(newValue, 10);\n    return isNaN(parsedValue) ? undefined : parsedValue;\n  }\n\n  handleWholesLength(value) {\n    if (this.config.maxLength) {\n      const negativeSign = value.toString().startsWith('-') ? '-' : '';\n      const absoluteValue = value.toString()\n        .replace(/^-/, '')\n        .replace(/[,|.]/, this.config.decimals);\n      if (absoluteValue.toString().includes(this.config.decimals)) {\n        const [wholes, decimals] = absoluteValue.toString().split(this.config.decimals);\n        const properDecimals = this.removeInvalidCharacters(decimals, true);\n        return negativeSign + wholes.substr(0, this.config.maxLength) + this.config.decimals + properDecimals;\n      }\n      return negativeSign + absoluteValue.toString().substr(0, this.config.maxLength);\n    }\n    return value;\n  }\n\n  removeInvalidCharacters(value, allowDecimalsOnly = false) {\n    return this.cleanUp(\n      allowDecimalsOnly\n        ? value.replace(/[^\\-0-9]/g, '')\n        : value.replace(/[^\\-0-9,.]/g, '')\n    );\n  }\n\n  private cleanUp(input) {\n    // no precision at all\n    let value = input.replace(/[,|.]/g, '.');\n    const firstIndex = typeof value === 'string' || value instanceof String\n      ? value.indexOf('.')\n      : -1;\n    if (firstIndex === -1) {\n      return value;\n    }\n\n    // remove everything after second comma\n    const secondIndex = value.substr(firstIndex + 1).indexOf('.');\n    if (secondIndex !== -1) {\n      this.lsnNumericMessages.emit(NumericMessage.ADDITIONAL_DECIMAL_SEPARATOR);\n      value = value.substr(0, firstIndex + secondIndex + 1);\n    }\n\n    // remove additional precision\n    if (this.config.precision === 0) {\n      return value.substr(0, firstIndex);\n    } else if (this.config.precision) {\n      return value.substr(0, firstIndex + this.config.precision + 1);\n    }\n    return value;\n  }\n\n  handleRange(value) {\n    if (!this.config.maxLength && this.config.max !== undefined && value > this.config.max) {\n      return this.config.max;\n    } else if (this.config.min !== undefined && value < this.config.min) {\n      return this.config.min;\n    }\n    return value;\n  }\n\n  handleStep(value: number): number {\n    return Math.round(value / this.config.step) * this.config.step;\n  }\n\n  prepareDisplayValue(value) {\n    if (!value && value !== 0) {\n      return '';\n    }\n    const [whole, decimals] = typeof value === 'number'\n      ? value.toString().split('.')\n      : value.toString().split(this.config.decimals);\n    const isNegative = whole[0] === '-';\n    let result = whole === '-' || !whole\n      ? '0'\n      : Math.abs(parseInt(whole, 10)).toString();\n    if (this.config.thousands) {\n      result = result.replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.config.thousands);\n    }\n    if (decimals && this.config.precision && this.config.decimals) {\n      result = result + this.config.decimals + decimals;\n    }\n    return isNegative && result !== '0' ? '-' + result : result;\n  }\n\n  setEditMode() {\n    if (this.config.thousands) {\n      const currentValue = this.element.nativeElement.value;\n      const [whole, decimals] = currentValue.split(this.config.decimals);\n      const regex = new RegExp('\\\\' + this.config.thousands, 'g');\n      let result = whole.replace(regex, '');\n      if (decimals && this.config.precision && this.config.decimals) {\n        result = result + this.config.decimals + decimals;\n      }\n      this.displayValue = result;\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  keyDownHandler(e: KeyboardEvent) {\n    const currentValue = this.element.nativeElement.value;\n    if (\n      // Allow special keys\n      [\n        keyboard.LEFT_ARROW,\n        keyboard.RIGHT_ARROW,\n        keyboard.BACKSPACE,\n        keyboard.DELETE,\n        keyboard.END,\n        keyboard.ENTER,\n        keyboard.ESCAPE,\n        keyboard.HOME,\n        keyboard.TAB,\n      ].indexOf(e.keyCode) !== -1\n      // Allow Ctrl+key actions\n      || (\n        [\n          keyboard.A,\n          keyboard.C,\n          keyboard.R,\n          keyboard.V,\n          keyboard.X,\n        ].indexOf(e.keyCode) !== -1\n        && (e.ctrlKey === true || e.metaKey === true)\n      )\n    ) {\n      return;  // let it happen, don't do anything\n    }\n\n    // Handle maxLength\n    const absoluteValue = currentValue.toString().replace(/^-/, '');\n    const [wholes] = absoluteValue.toString().split(this.config.decimals);\n    if (\n      this.config.maxLength !== undefined\n      && (\n        this.element.nativeElement.selectionStart < wholes.length\n        && wholes.length >= this.config.maxLength\n        && [keyboard.DASH, keyboard.NUMPAD_MINUS].indexOf(e.keyCode) === -1\n      )\n      && this.element.nativeElement.selectionEnd - this.element.nativeElement.selectionStart === 0\n    ) {\n      e.preventDefault();\n    }\n\n    // Handle minus\n    if (\n      [keyboard.DASH, keyboard.NUMPAD_MINUS].indexOf(e.keyCode) !== -1\n      && this.element.nativeElement.selectionStart === 0\n      && ((this.config.min !== undefined && this.config.min < 0) || this.config.min === undefined)\n      && currentValue.indexOf('-') === -1\n    ) {\n      return;\n    }\n\n    // Handle separator\n    if (\n      this.config.precision > 0\n      && [keyboard.COMMA, keyboard.NUMPAD_PERIOD, 190].indexOf(e.keyCode) !== -1\n      && this.element.nativeElement.selectionStart > 0\n      && currentValue.length\n      && currentValue.indexOf('.') === -1\n      && currentValue.indexOf(',') === -1\n    ) {\n      return;\n    }\n\n    // Handle key after separator\n    if (\n      this.config.precision > 0\n      && currentValue.indexOf(this.config.decimals) > -1\n      && this.element.nativeElement.selectionStart > currentValue.indexOf(this.config.decimals)\n    ) {\n      const [, decimals] = currentValue.split(this.config.decimals);\n      if (decimals && decimals.length >= this.config.precision) {\n        e.preventDefault();\n      }\n    }\n    // Ensure that it is a number or stop the keypress\n    if (\n      (\n        (\n          [\n            keyboard.ZERO,\n            keyboard.ONE,\n            keyboard.TWO,\n            keyboard.THREE,\n            keyboard.FOUR,\n            keyboard.FIVE,\n            keyboard.SIX,\n            keyboard.SEVEN,\n            keyboard.EIGHT,\n            keyboard.NINE\n          ].indexOf(e.keyCode) === -1\n          || e.shiftKey\n        )\n        &&\n        [\n          keyboard.NUMPAD_ZERO,\n          keyboard.NUMPAD_ONE,\n          keyboard.NUMPAD_TWO,\n          keyboard.NUMPAD_THREE,\n          keyboard.NUMPAD_FOUR,\n          keyboard.NUMPAD_FIVE,\n          keyboard.NUMPAD_SIX,\n          keyboard.NUMPAD_SEVEN,\n          keyboard.NUMPAD_EIGHT,\n          keyboard.NUMPAD_NINE,\n        ].indexOf(e.keyCode) === -1\n      )\n      || (\n        this.element.nativeElement.selectionStart === 0\n        && this.element.nativeElement.selectionEnd === 0\n        && currentValue.indexOf('-') > -1\n      )\n    ) {\n      e.preventDefault();\n    }\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.element.nativeElement.disabled = isDisabled;\n  }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {NumericDirective} from './numeric.directive';\nimport {NumericConfigService, CustomNumericConfig} from './numeric-config.service';\n\n@NgModule({\n  declarations: [\n    NumericDirective,\n  ],\n  exports: [\n    NumericDirective,\n  ]\n})\nexport class LsnNumericModule {\n  static forRoot(config?: CustomNumericConfig): ModuleWithProviders {\n    return {\n      ngModule: LsnNumericModule,\n      providers: [\n        NumericConfigService,\n        {provide: CustomNumericConfig, useValue: config}\n      ]\n    };\n  }\n}\n","import {Directive, ElementRef, HostListener, Input, OnChanges, Optional} from '@angular/core';\nimport * as keyboard from '@angular/cdk/keycodes';\nimport {NgControl} from '@angular/forms';\n\nclass NumPadConfig {\n  maxlength: number;\n  allowLeadingZeros = false;\n}\n\n@Directive({\n  selector: '[lsnNumPad]'\n})\nexport class NumPadDirective implements OnChanges {\n  @Input() lsnNumPad = {};\n  protected config: NumPadConfig;\n  private defaultConfig: NumPadConfig = new NumPadConfig();\n\n  constructor(private element: ElementRef, @Optional() private ngControl: NgControl) {\n  }\n\n  ngOnChanges() {\n    this.config = Object.assign({...this.defaultConfig, ...this.lsnNumPad});\n  }\n\n  @HostListener('input', ['$event'])\n  inputHandler($event) {\n    const currentValue = $event.target.value;\n    this.setValue(this.parseNewValue(currentValue));\n  }\n\n  @HostListener('blur', ['$event'])\n  blurHandler($event) {\n    const currentValue = $event.target.value;\n    this.setValue(this.parseNewValue(currentValue, true));\n  }\n\n  protected setValue(value) {\n    if (this.ngControl && this.ngControl.control) {\n      this.ngControl.control.setValue(value);\n    } else {\n      this.element.nativeElement.value = value;\n    }\n  }\n\n  protected parseNewValue(value, blurEvent = false) {\n    let newValue = value.replace(/[^0-9]/g, '');\n    if (newValue === '') {\n      return blurEvent ? '' : newValue;\n    }\n    if (this.config.maxlength && this.config.maxlength > 0) {\n      newValue = newValue.substring(0, this.config.maxlength);\n    }\n    if (!this.config.allowLeadingZeros && blurEvent) {\n      newValue = newValue.replace(/^0+/, '');\n    }\n    return newValue;\n  }\n\n  @HostListener('keydown', ['$event'])\n  keyDownHandler(e: KeyboardEvent) {\n    const currentValue = this.element.nativeElement.value;\n    if (\n      // Allow special keys\n      [\n        keyboard.LEFT_ARROW,\n        keyboard.RIGHT_ARROW,\n        keyboard.BACKSPACE,\n        keyboard.DELETE,\n        keyboard.END,\n        keyboard.ENTER,\n        keyboard.ESCAPE,\n        keyboard.HOME,\n        keyboard.TAB,\n      ].indexOf(e.keyCode) !== -1\n      // Allow Ctrl+key actions\n      || (\n        [\n          keyboard.A,\n          keyboard.C,\n          keyboard.R,\n          keyboard.V,\n          keyboard.X,\n        ].indexOf(e.keyCode) !== -1\n        && (e.ctrlKey === true || e.metaKey === true)\n      )\n    ) {\n      return;  // let it happen, don't do anything\n    }\n\n    // Ensure that it is a number or stop the keypress\n    if (\n      (\n        (\n          [\n            keyboard.ZERO,\n            keyboard.ONE,\n            keyboard.TWO,\n            keyboard.THREE,\n            keyboard.FOUR,\n            keyboard.FIVE,\n            keyboard.SIX,\n            keyboard.SEVEN,\n            keyboard.EIGHT,\n            keyboard.NINE\n          ].indexOf(e.keyCode) === -1\n          || e.shiftKey\n        )\n        &&\n        [\n          keyboard.NUMPAD_ZERO,\n          keyboard.NUMPAD_ONE,\n          keyboard.NUMPAD_TWO,\n          keyboard.NUMPAD_THREE,\n          keyboard.NUMPAD_FOUR,\n          keyboard.NUMPAD_FIVE,\n          keyboard.NUMPAD_SIX,\n          keyboard.NUMPAD_SEVEN,\n          keyboard.NUMPAD_EIGHT,\n          keyboard.NUMPAD_NINE,\n        ].indexOf(e.keyCode) === -1\n      )\n      || (\n        currentValue.length\n        && this.config.maxlength && this.config.maxlength > 0\n        && currentValue.length >= this.config.maxlength\n      )\n    ) {\n      e.preventDefault();\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {NumPadDirective} from './numpad.directive';\n\n@NgModule({\n  declarations: [\n    NumPadDirective,\n  ],\n  imports: [],\n  exports: [\n    NumPadDirective,\n  ]\n})\nexport class LsnNumpadModule {\n}\n","import {Directive, ElementRef, HostListener} from '@angular/core';\nimport {NgModel} from '@angular/forms';\n\n\n@Directive({\n  selector: '[ngModel][lsnLatinToGreek]',\n  providers: [NgModel]\n})\nexport class LatinToGreekDirective {\n\n  private latinToGreek = [\n    [/A/ig, 'Α'],\n    [/B/ig, 'Β'],\n    [/G/ig, 'Γ'],\n    [/D/ig, 'Δ'],\n    [/E/ig, 'Ε'],\n    [/Z/ig, 'Ζ'],\n    [/H/ig, 'Η'],\n    [/U/ig, 'Θ'],\n    [/I/ig, 'Ι'],\n    [/K/ig, 'Κ'],\n    [/L/ig, 'Λ'],\n    [/M/ig, 'Μ'],\n    [/N/ig, 'Ν'],\n    [/J/ig, 'Ξ'],\n    [/O/ig, 'Ο'],\n    [/P/ig, 'Π'],\n    [/R/ig, 'Ρ'],\n    [/S/ig, 'Σ'],\n    [/T/ig, 'Τ'],\n    [/Y/ig, 'Υ'],\n    [/F/ig, 'Φ'],\n    [/X/ig, 'Χ'],\n    [/C/ig, 'Ψ'],\n    [/V/ig, 'Ω'],\n    [/W/ig, 'W'],\n    [/Q/ig, 'Q']\n  ];\n\n  constructor(private model: NgModel, private el: ElementRef) {\n  }\n\n  private getCaret() {\n    return {\n      start: this.el.nativeElement.selectionStart,\n      end: this.el.nativeElement.selectionEnd,\n    };\n  }\n\n  private setCaret(start, end) {\n    this.el.nativeElement.selectionStart = start;\n    this.el.nativeElement.selectionEnd = end;\n    this.el.nativeElement.focus();\n  }\n\n\n  @HostListener('ngModelChange', ['$event'])\n  onInputChange($event) {\n    const {start, end} = this.getCaret();\n\n    let translated = $event.toLocaleUpperCase();\n    this.latinToGreek.forEach(replace => {\n      translated = translated.replace(replace[0], replace[1]);\n    });\n    this.model.valueAccessor.writeValue(translated);\n    this.setCaret(start, end);\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {LatinToGreekDirective} from './latin-to-greek.directive';\n\n@NgModule({\n  declarations: [\n    LatinToGreekDirective,\n  ],\n  imports: [],\n  exports: [\n    LatinToGreekDirective,\n  ]\n})\nexport class LsnLatinToGreekModule {\n}\n","import {Directive, HostListener} from '@angular/core';\nimport {NgModel} from '@angular/forms';\n\n@Directive({\n  selector: '[ngModel][lsnCapitalize]',\n  providers: [NgModel]\n})\nexport class CapitalizeDirective {\n  constructor(private model: NgModel) {\n  }\n\n  @HostListener('ngModelChange', ['$event'])\n  onInputChange($event) {\n    this.model.valueAccessor.writeValue($event.toLocaleUpperCase());\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CapitalizeDirective} from './capitalize.directive';\n\n@NgModule({\n  declarations: [\n    CapitalizeDirective,\n  ],\n  imports: [],\n  exports: [\n    CapitalizeDirective,\n  ]\n})\nexport class LsnCapitalizeModule {\n}\n","import { Directive, ElementRef, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter, tap } from 'rxjs/operators';\n\n@Directive({\n  selector: '[lsnScrollSpy]'\n})\nexport class ScrollSpyDirective implements OnInit, OnDestroy {\n\n  @Input()\n  spySelector: string;\n\n  @Input()\n  scrollToSection: Observable<string>;\n\n  @Output()\n  spySectionChange = new EventEmitter<string>();\n\n  private scrollOffset: number;\n  private currentSection$: Subject<string>;\n  private disableEmitter = false;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(private elementRef: ElementRef) {\n    this.currentSection$ = new Subject();\n  }\n\n  ngOnInit(): void {\n    this.scrollOffset = this.nativeElement().offsetTop;\n\n    // emit event on section change\n    const sectionChangeSub = this.currentSection$.pipe(\n      distinctUntilChanged(),\n      tap((sectionId) => this.spySectionChange.emit(sectionId))\n    ).subscribe();\n\n    // scroll to given section\n    const scrollToSub = this.scrollToSection.pipe(\n      filter((section) => !!section),\n      tap((section) => this.scrollTo(section))\n    ).subscribe();\n\n    this.subscriptions.push(sectionChangeSub, scrollToSub);\n  }\n\n  @HostListener('scroll')\n  onScroll() {\n    const section: HTMLElement = this.findCurrentSection();\n    if (section) {\n      this.setCurrentSection(section.id);\n    }\n  }\n\n  @HostListener('window:resize')\n  onResize() {\n    this.onScroll();\n  }\n\n  private scrollTo(sectionId) {\n    this.disableEmitter = true;\n\n    this.nativeElement().querySelector('#' + sectionId).scrollIntoView();\n\n    // set timeout to enforce scroll event execute before enabling back the emitter\n    setTimeout(() => {\n      this.disableEmitter = false;\n    }, 0);\n  }\n\n  private findCurrentSection(): HTMLElement {\n    const scrollMiddle = (this.scrollTopPosition() + this.scrollBottomPosition()) / 2;\n    const spiedSections = this.getSpiedSections();\n    return spiedSections.find((section) => this.isCurrentSection(section, scrollMiddle));\n  }\n\n  private getSpiedSections(): HTMLElement[] {\n    return Array.from(this.nativeElement().querySelectorAll(this.spySelector));\n  }\n\n  private isCurrentSection(section: HTMLElement, scrollMiddle: number): boolean {\n    return this.sectionTopPosition(section) <= scrollMiddle\n      && this.sectionBottomPosition(section) > scrollMiddle;\n  }\n\n  private setCurrentSection(sectionId: string) {\n    if (!this.disableEmitter) {\n      this.currentSection$.next(sectionId);\n    }\n  }\n\n  private sectionTopPosition(section: HTMLElement) {\n    return section.offsetTop;\n  }\n\n  private sectionBottomPosition(section: HTMLElement) {\n    return section.offsetTop + section.offsetHeight;\n  }\n\n  private scrollTopPosition() {\n    return this.scrollOffset + this.nativeElement().scrollTop;\n  }\n\n  private scrollBottomPosition() {\n    return this.scrollOffset + this.nativeElement().scrollTop + this.nativeElement().offsetHeight;\n  }\n\n  private nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ScrollSpyDirective } from './scroll-spy.directive';\n\n@NgModule({\n  declarations: [\n    ScrollSpyDirective,\n  ],\n  imports: [],\n  exports: [\n    ScrollSpyDirective,\n  ]\n})\nexport class LsnScrollSpyModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class LsnCookieModule { }\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LsnCookieModule} from '../lsn-cookie/lsn-cookie.module';\nimport {LsnCrossTabService} from './lsn-cross-tab.service';\n\nexport function lsnCrossTabServiceFactory(lsnCrossTabService: LsnCrossTabService) {\n  return () => lsnCrossTabService.run();\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LsnCookieModule\n  ],\n  exports: [\n    LsnCookieModule\n  ]\n})\nexport class LsnCrossTabModule {\n}\n","import {NgModule} from '@angular/core';\nimport {LsnNumericModule} from './directives/numeric/numeric.module';\nimport {LsnNumpadModule} from './directives/numpad/numpad.module';\nimport {LsnLatinToGreekModule} from './directives/latin-to-greek/latin-to-greek.module';\nimport {LsnCapitalizeModule} from './directives/capitalize/capitalize.module';\nimport {LsnScrollSpyModule} from './directives/scroll-spy/scroll-spy.module';\nimport {FormsModule} from '@angular/forms';\nimport {LsnCrossTabModule} from './services/lsn-cross-tab/lsn-cross-tab.module';\nimport {LsnCookieModule} from './services/lsn-cookie/lsn-cookie.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    FormsModule,\n    LsnCapitalizeModule,\n    LsnLatinToGreekModule,\n    LsnNumericModule.forRoot({\n      default: {\n        decimals: '.',\n        precision: 4,\n      },\n      custom: {\n        currency: {\n          decimals: ',',\n          thousands: ' ',\n          precision: 2,\n        }\n      }\n    }),\n    LsnNumpadModule,\n    LsnCookieModule,\n    LsnCrossTabModule,\n    LsnScrollSpyModule\n  ],\n  exports: [\n    LsnCapitalizeModule,\n    LsnLatinToGreekModule,\n    LsnNumericModule,\n    LsnNumpadModule,\n    LsnCookieModule,\n    LsnCrossTabModule,\n    LsnScrollSpyModule\n  ]\n})\nexport class LsnLibsModule {\n}\n","import {InjectionToken} from '@angular/core';\n\nexport class LsnCrossTabConfig {\n  cookieCleanFreq: number;\n  cookieReadFreq: number;\n  msgTtl: number; // represents duration of existence of given cross tab message, after this period from message creation, the message will be deleted from cookie\n  rootDomain: string;\n  crossTabCookieName: string;\n\n  constructor({cookieCleanFreq = null, cookieReadFreq = null, msgTtl = null, rootDomain = null, crossTabCookieName = null} = {}) {\n    this.cookieCleanFreq = cookieCleanFreq;\n    this.cookieReadFreq = cookieReadFreq;\n    this.msgTtl = msgTtl;\n    this.rootDomain = rootDomain;\n    this.crossTabCookieName = crossTabCookieName;\n  }\n}\n\nexport const LSN_CROSS_TAB_CONFIG = new InjectionToken<LsnCrossTabConfig>('LsnCrossTabConfig');\n","export class LsnCrossTabMessage<T extends object = any> {\n  created?: number;\n  code?: string;\n  tabId?: string;\n  attrs?: T;\n\n  constructor({created = null, code = null, tabId = null, attrs = null}: LsnCrossTabMessage<T> = {}) {\n    this.created = created;\n    this.code = code;\n    this.tabId = tabId;\n    this.attrs = attrs;\n  }\n\n  static compare(firstMessage: LsnCrossTabMessage, secondMessage: LsnCrossTabMessage) {\n    if (!firstMessage || !secondMessage) {\n      return false;\n    }\n    if (firstMessage.created !== secondMessage.created) {\n      return false;\n    }\n    if (firstMessage.code !== secondMessage.code) {\n      return false;\n    }\n    return firstMessage.tabId !== secondMessage.tabId;\n  }\n}\n","import {InjectionToken} from '@angular/core';\n\nexport class LsnCookieConfig {\n  secureCookies: boolean;\n  domainCookies: boolean;\n\n  constructor({\n                secureCookies = null, domainCookies = null\n              } = {}) {\n    this.secureCookies = secureCookies;\n    this.domainCookies = domainCookies;\n  }\n}\n\nexport const LSN_COOKIE_CONFIG = new InjectionToken<LsnCookieConfig>('LsnCookieConfig');\n","import {Inject, Injectable} from '@angular/core';\nimport {LSN_COOKIE_CONFIG, LsnCookieConfig} from './lsnCookieConfig';\nimport {DOCUMENT} from '@angular/common';\n\nexport interface LsnCookieOptions {\n  expires?: number | Date;\n  expirationUnit?: string;\n  path?: string;\n  domain?: string | boolean;\n  secure?: boolean;\n}\n\nexport interface CookieService {\n  set(cookieKey: string, cookieValue, cookieOptions: LsnCookieOptions): void;\n\n  get(cookieKey?: string): any;\n\n  remove(cookieKey: string, cookieOptions: LsnCookieOptions): void;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LsnCookieService implements CookieService {\n\n  constructor(@Inject(LSN_COOKIE_CONFIG) private cookieConfig: LsnCookieConfig, @Inject(DOCUMENT) readonly document: any) {\n  }\n\n  /**\n   * Sets cookie with given key to given value, cookie options are optional, if not set, some properties\n   * (secure and domain) will be set from global cookie config\n   */\n  set(cookieKey: string, cookieValue: any, cookieOptions?: LsnCookieOptions) {\n    const options = {\n      ...cookieOptions,\n      secure: cookieOptions && cookieOptions.secure ? cookieOptions.secure : this.cookieConfig.secureCookies\n    };\n    if (!this.cookieConfig.domainCookies) {\n      options.domain = false;\n    }\n    const value = JSON.stringify(cookieValue);\n    let expiresFor;\n\n    if (typeof options.expires === 'number') {\n      expiresFor = options.expires;\n      options.expires = new Date();\n      // Trying to delete a cookie; set a date far in the past\n      if (expiresFor === -1) {\n        options.expires = new Date('Thu, 01 Jan 1970 00:00:00 GMT');\n      } else if (options.expirationUnit) {\n        if (options.expirationUnit === 'hours') {\n          options.expires.setHours(options.expires.getHours() + expiresFor);\n        } else if (options.expirationUnit === 'minutes') {\n          options.expires.setMinutes(options.expires.getMinutes() + expiresFor);\n        } else if (options.expirationUnit === 'seconds') {\n          options.expires.setSeconds(options.expires.getSeconds() + expiresFor);\n        } else if (options.expirationUnit === 'milliseconds') {\n          options.expires.setMilliseconds(options.expires.getMilliseconds() + expiresFor);\n        } else {\n          options.expires.setDate(options.expires.getDate() + expiresFor);\n        }\n      } else {\n        options.expires.setDate(options.expires.getDate() + expiresFor);\n      }\n    }\n    this.document.cookie = [\n      encodeURIComponent(cookieKey),\n      '=',\n      encodeURIComponent(value),\n      options.expires ? '; expires=' + options.expires.toUTCString() : '',\n      options.path ? '; path=' + options.path : '',\n      options.domain ? '; domain=' + options.domain : '',\n      options.secure ? '; secure' : ''\n    ].join('');\n  }\n\n  /**\n   * Key provided - returns value of given cookie or undefined if non existent\n   * Key not provided - returns all cookies as Object or undefined if there are no cookies\n   * Cookie values are JSON.parsed, if error occurs during parsing, string value is assigned\n   */\n  get(cookieKey?: string): any {\n    const cookieStringList: Array<String> = this.document.cookie ? this.document.cookie.split('; ') : [];\n\n    const cookieObject = cookieStringList\n      .map(cookieString => {\n        const pos = cookieString.indexOf('=');\n        return {\n          name: cookieString.substr(0, pos),\n          value: decodeURIComponent(cookieString.substr(pos + 1))\n        };\n      }).filter(cookie => {\n        return typeof cookie.value !== 'undefined' && (cookieKey === undefined || cookieKey === cookie.name);\n      }).reduce((previousValue: object, currentValue: { name: string, value: any }) => {\n        let value = null;\n        try {\n          value = JSON.parse(currentValue.value);\n        } catch (e) {\n          value = currentValue.value;\n        }\n        previousValue[currentValue.name] = value;\n        return previousValue;\n      }, {});\n    return cookieKey ? cookieObject[cookieKey] : Object.keys(cookieObject).length > 0 ? cookieObject : undefined;\n  }\n\n  remove(cookieKey: string, cookieOptions: LsnCookieOptions = {}) {\n    const cookie = this.get(cookieKey);\n\n    if (cookie) {\n      cookieOptions.expires = -1;\n      this.set(cookieKey, '', cookieOptions);\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","import {Inject, Injectable, OnDestroy, Optional} from '@angular/core';\nimport {interval, Observable, Subject, Subscription} from 'rxjs';\nimport {LsnCrossTabMessage} from './models/lsnCrossTabMessage';\nimport {LSN_CROSS_TAB_CONFIG, LsnCrossTabConfig} from './models/lsnCrossTabConfig';\nimport {LsnCookieService} from '../lsn-cookie/lsn-cookie.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LsnCrossTabService implements OnDestroy {\n  private readonly messageSubject: Subject<LsnCrossTabMessage>;\n  readonly tabId: string;\n  private readonly messagesReadSet: Set<string>;\n  private readonly tabOpenTime: number;\n  private cookieReadSubscription: Subscription;\n  private cookieCleanSubscription: Subscription;\n  private crossTabConfig: LsnCrossTabConfig;\n\n  private get crossTabCookieName(): string {\n    return this.crossTabConfig.crossTabCookieName;\n  }\n\n  constructor(private lsnCookieService: LsnCookieService,\n              @Optional() @Inject(LSN_CROSS_TAB_CONFIG) crossTabConfig: LsnCrossTabConfig) {\n    this.crossTabConfig = crossTabConfig || new LsnCrossTabConfig();\n    this.messageSubject = new Subject<LsnCrossTabMessage>();\n    this.tabId = Math.random() + '';\n    this.messagesReadSet = new Set<string>();\n    this.tabOpenTime = Date.now();\n  }\n\n  /**\n   * This function sets up subscriptions for reading and cleaning cross tab cookie\n   */\n  run(): void {\n    if (!this.cookieReadSubscription) {\n      this.cookieReadSubscription = interval(this.crossTabConfig.cookieReadFreq)\n        .subscribe(() => this.readMessages());\n    }\n    if (!this.cookieCleanSubscription) {\n      this.cookieCleanSubscription = interval(this.crossTabConfig.cookieCleanFreq)\n        .subscribe(() => this.cleanCookie());\n    }\n  }\n\n  /**\n   * This Observable emits messages that were sent by other tabs\n   */\n  get messages$(): Observable<LsnCrossTabMessage> {\n    return this.messageSubject;\n  }\n\n  /**\n   * Manually set cross tab config, for example when config must be provided asynchronously and not with InjectionToken\n   */\n  setCrossTabConfig(config: LsnCrossTabConfig) {\n    this.crossTabConfig = config;\n  }\n\n  /**\n   * Sends message to other tabs by adding this message to cross tab cookie\n   */\n  sendMessage(data: (string | LsnCrossTabMessage | object)) {\n    let message;\n    if (typeof data === 'string') {\n      message = new LsnCrossTabMessage({code: data});\n    } else if (data instanceof LsnCrossTabMessage) {\n      message = data;\n    } else if (!!data && typeof data === 'object' && !Array.isArray(data)) {\n      message = new LsnCrossTabMessage({...data});\n    } else {\n      return;\n    }\n    // previous implementation, message.created is always overridden\n    message.created = new Date().getTime();\n    message.tabId = this.tabId;\n    this.messagesReadSet.add(this.getMessageId(message));\n    this.updateCookie(this.messageToPlainObject(message));\n  }\n\n  /**\n   * Checks if message with given id was already read\n   */\n  private messageWasRead = (msg: LsnCrossTabMessage): boolean => this.messagesReadSet.has(this.getMessageId(msg));\n\n  private getMessageId = (message: LsnCrossTabMessage): string => message.tabId + message.created + message.code;\n\n  private messageToPlainObject = (msg: LsnCrossTabMessage): object => Object.keys(msg)\n    .reduce((minifiedObj, key) => {\n      const value = msg[key];\n      if (!(key === 'attrs' && (value === null || value === {}))) {\n        minifiedObj[key] = value;\n        return minifiedObj;\n      } else {\n        return minifiedObj;\n      } // tslint:disable\n    }, {}); // tslint:enable\n\n  /**\n   * Appends given message to cross tab cookie value\n   */\n  private updateCookie(msg: object) {\n    const cookieData: Array<LsnCrossTabMessage> = this.cookie;\n    cookieData.push(msg);\n    this.cookie = cookieData;\n  }\n\n  private get cookie() {\n    return this.lsnCookieService.get(this.crossTabConfig.crossTabCookieName) || [];\n  }\n\n  private set cookie(cookieData: Array<LsnCrossTabMessage>) {\n    this.lsnCookieService.set(this.crossTabCookieName, cookieData, {\n      domain: this.crossTabConfig.rootDomain,\n      path: '/'\n    });\n  }\n\n  /**\n   * Removes messages from cross tab cookie that are older than supplied config.msgTtl time\n   */\n  private cleanCookie() {\n    const currentCookie = this.cookie;\n    if (currentCookie === null) {\n      return;\n    }\n\n    const timestamp = new Date().getTime();\n    const cleanedCookie = currentCookie.filter(this.cleanCookieFilter(timestamp, this.crossTabConfig.msgTtl));\n    // previous implementation, cookie might have been modified in the other tab?\n    if (!this.areCookiesEqual(currentCookie, this.cookie)) {\n      return;\n    }\n\n    this.cookie = cleanedCookie;\n  }\n\n  /**\n   * Callback invoked after every cookie read interval\n   */\n  private readMessages() {\n    if (this.cookie) {\n      this.cookie.forEach((msgData: LsnCrossTabMessage) => {\n        if (msgData.created > this.tabOpenTime) {\n          const msgCopy = {...msgData};\n          if (!this.messageWasRead(msgCopy)) {\n            this.messagesReadSet.add(this.getMessageId(msgCopy));\n            this.messageSubject.next(msgCopy);\n          }\n        }\n      });\n    }\n  }\n\n  getCookie = () => this.cookie;\n\n  /**\n   * Removes all subscriptions that this service is subscribe to (intervals are cleared)\n   */\n  unsubscribe() {\n    this.cookieReadSubscription.unsubscribe();\n    this.cookieCleanSubscription.unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe();\n  }\n\n  /**\n   * Sorts two cookie arrays and compares each element\n   */\n  private areCookiesEqual(firstCookie: Array<LsnCrossTabMessage>, secondCookie: Array<LsnCrossTabMessage>) {\n    if (firstCookie.length !== secondCookie.length) {\n      return false;\n    } else if (firstCookie.length === 0 && secondCookie.length === 0) {\n      return true;\n    }\n    firstCookie.sort(this.messageComparer);\n    secondCookie.sort(this.messageComparer);\n    let index = 0;\n    let areCookiesEqual = true;\n    for (const message of firstCookie) {\n      if (LsnCrossTabMessage.compare(message, secondCookie[index])) {\n        areCookiesEqual = false;\n      } else {\n        ++index;\n      }\n    }\n    return areCookiesEqual;\n  }\n\n  /**\n   * Compares two messages by properties in order: 'created', 'code', 'tabId';\n   */\n  private messageComparer(firstCookieValue: LsnCrossTabMessage, secondCookieValue: LsnCrossTabMessage) {\n    let result = firstCookieValue.created < secondCookieValue.created ? -1 : secondCookieValue.created < firstCookieValue.created ? 1 : 0;\n    if (result === 0) {\n      result = firstCookieValue.code < secondCookieValue.code ? -1 : secondCookieValue.code < firstCookieValue.code ? 1 : 0;\n      if (result === 0) {\n        result = firstCookieValue.tabId < secondCookieValue.tabId ? -1 : secondCookieValue.tabId < firstCookieValue.tabId ? 1 : 0;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Function determines whether given message is to be removed from the cross tab cookie\n   */\n  private cleanCookieFilter(timestamp: number, msgTtl: number) {\n    return (cookieMessage: LsnCrossTabMessage) => timestamp - cookieMessage.created <= msgTtl;\n  }\n\n}\n"]}