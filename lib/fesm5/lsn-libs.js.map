{"version":3,"file":"lsn-libs.js.map","sources":["ng://lsn-libs/lib/directives/numeric/numeric.directive.ts","ng://lsn-libs/lib/lsn-libs.module.ts"],"sourcesContent":["import {Directive, ElementRef, HostListener, Input, OnChanges} from '@angular/core';\nimport * as keyboard from '@angular/cdk/keycodes';\nimport {NgControl} from '@angular/forms';\n\nenum NumericSeparator {\n  COMMA = ',',\n  PERIOD = '.'\n}\n\nclass NumericConfig {\n  min: number;\n  max: number;\n  precision = 0;\n  separator: NumericSeparator = NumericSeparator.PERIOD;\n}\n\n\n@Directive({\n  selector: '[lsnNumeric]'\n})\nexport class NumericDirective implements OnChanges {\n  @Input() lsnNumeric = {};\n  element: any;\n  protected config: NumericConfig;\n  private defaultConfig: NumericConfig = new NumericConfig();\n\n  constructor(private el: ElementRef, private ngControl: NgControl) {\n    this.element = el;\n  }\n\n  ngOnChanges() {\n    this.config = Object.assign({...this.defaultConfig, ...this.lsnNumeric});\n  }\n\n  @HostListener('input', ['$event'])\n  inputHandler($event) {\n    const currentValue = $event.target.value;\n    this.ngControl.control.setValue(this.parseNewValue(currentValue));\n  }\n\n  @HostListener('blur', ['$event'])\n  blurHandler($event) {\n    const currentValue = $event.target.value;\n    this.ngControl.control.setValue(this.parseNewValue(currentValue, true));\n  }\n\n  protected parseNewValue(value, blurEvent = false) {\n    let newValue = value;\n    if (newValue === '' || newValue === '-') {\n      return blurEvent ? '' : newValue;\n    }\n    if (this.config.precision > 0) {\n      newValue = newValue.replace(/[,|.]/, this.config.separator);\n      if (\n        [this.config.separator, '0'].indexOf(newValue.slice(-1)) > -1\n        && !blurEvent\n      ) {\n        return newValue;\n      }\n      newValue = parseFloat(newValue);\n    } else {\n      newValue = parseInt(newValue, 10);\n    }\n    if (this.config.max !== undefined && newValue > this.config.max) {\n      newValue = this.config.max;\n    } else if (this.config.min !== undefined && newValue < this.config.min) {\n      newValue = this.config.min;\n    }\n    return isNaN(newValue) ? '' : newValue;\n  }\n\n  @HostListener('keydown', ['$event'])\n  keyDownHandler(e: KeyboardEvent) {\n    const currentValue = this.element.nativeElement.value;\n    if (\n      // Allow special keys\n      [\n        keyboard.LEFT_ARROW,\n        keyboard.RIGHT_ARROW,\n        keyboard.BACKSPACE,\n        keyboard.DELETE,\n        keyboard.END,\n        keyboard.ENTER,\n        keyboard.ESCAPE,\n        keyboard.HOME,\n        keyboard.TAB,\n      ].indexOf(e.keyCode) !== -1\n      // Allow Ctrl+key actions\n      || (\n        [\n          keyboard.A,\n          keyboard.C,\n          keyboard.R,\n          keyboard.V,\n          keyboard.X,\n        ].indexOf(e.keyCode) !== -1\n        && (e.ctrlKey === true || e.metaKey === true)\n      )\n    ) {\n      return;  // let it happen, don't do anything\n    }\n\n    // Handle minus\n    if (\n      [keyboard.DASH, keyboard.NUMPAD_MINUS].indexOf(e.keyCode) !== -1\n      && this.element.nativeElement.selectionStart === 0\n      && ((this.config.min !== undefined && this.config.min < 0) || this.config.min === undefined)\n      && ((this.config.max !== undefined && this.config.max < 0) || this.config.max === undefined)\n      && currentValue.indexOf('-') === -1\n    ) {\n      return;\n    }\n\n    // Handle separator\n    if (\n      this.config.precision > 0\n      && [keyboard.COMMA, keyboard.NUMPAD_PERIOD, 190].indexOf(e.keyCode) !== -1\n      && this.element.nativeElement.selectionStart > 0\n      && currentValue.length\n      && currentValue.indexOf(this.config.separator) === -1\n    ) {\n      return;\n    }\n\n    // Handle key after separator\n    if (\n      this.config.precision > 0\n      && currentValue.indexOf(this.config.separator) > -1\n      && this.element.nativeElement.selectionStart > currentValue.indexOf(this.config.separator)\n    ) {\n      const [, decimals] = currentValue.split(this.config.separator);\n      if (decimals && decimals.length >= this.config.precision) {\n        e.preventDefault();\n      }\n    }\n\n    // Ensure that it is a number or stop the keypress\n    if (\n      (\n        (\n          [\n            keyboard.ZERO,\n            keyboard.ONE,\n            keyboard.TWO,\n            keyboard.THREE,\n            keyboard.FOUR,\n            keyboard.FIVE,\n            keyboard.SIX,\n            keyboard.SEVEN,\n            keyboard.EIGHT,\n            keyboard.NINE\n          ].indexOf(e.keyCode) === -1\n          || e.shiftKey\n        )\n        &&\n        [\n          keyboard.NUMPAD_ZERO,\n          keyboard.NUMPAD_ONE,\n          keyboard.NUMPAD_TWO,\n          keyboard.NUMPAD_THREE,\n          keyboard.NUMPAD_FOUR,\n          keyboard.NUMPAD_FIVE,\n          keyboard.NUMPAD_SIX,\n          keyboard.NUMPAD_SEVEN,\n          keyboard.NUMPAD_EIGHT,\n          keyboard.NUMPAD_NINE,\n        ].indexOf(e.keyCode) === -1\n      )\n      || (this.element.nativeElement.selectionStart === 0 && currentValue.indexOf('-') > -1)\n    ) {\n      e.preventDefault();\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {NumericDirective} from './directives/numeric/numeric.directive';\n\n@NgModule({\n  declarations: [\n    NumericDirective,\n  ],\n  imports: [],\n  exports: [\n    NumericDirective,\n  ]\n})\nexport class LsnLibsModule {\n}\n"],"names":["keyboard.LEFT_ARROW","keyboard.RIGHT_ARROW","keyboard.BACKSPACE","keyboard.DELETE","keyboard.END","keyboard.ENTER","keyboard.ESCAPE","keyboard.HOME","keyboard.TAB","keyboard.A","keyboard.C","keyboard.R","keyboard.V","keyboard.X","keyboard.DASH","keyboard.NUMPAD_MINUS","keyboard.COMMA","keyboard.NUMPAD_PERIOD","keyboard.ZERO","keyboard.ONE","keyboard.TWO","keyboard.THREE","keyboard.FOUR","keyboard.FIVE","keyboard.SIX","keyboard.SEVEN","keyboard.EIGHT","keyboard.NINE","keyboard.NUMPAD_ZERO","keyboard.NUMPAD_ONE","keyboard.NUMPAD_TWO","keyboard.NUMPAD_THREE","keyboard.NUMPAD_FOUR","keyboard.NUMPAD_FIVE","keyboard.NUMPAD_SIX","keyboard.NUMPAD_SEVEN","keyboard.NUMPAD_EIGHT","keyboard.NUMPAD_NINE"],"mappings":";;;;;;;;;;;IAKE,OAAQ,GAAG;IACX,QAAS,GAAG;;AAGd;IAAA;QAGE,cAAS,GAAG,CAAC,CAAC;QACd,cAAS,GAAqB,gBAAgB,CAAC,MAAM,CAAC;KACvD;IAAD,oBAAC;CAAA,IAAA;;IAYC,0BAAoB,EAAc,EAAU,SAAoB;QAA5C,OAAE,GAAF,EAAE,CAAY;QAAU,cAAS,GAAT,SAAS,CAAW;QALvD,eAAU,GAAG,EAAE,CAAC;QAGjB,kBAAa,GAAkB,IAAI,aAAa,EAAE,CAAC;QAGzD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;KACnB;;;;IAED,sCAAW;;;IAAX;QACE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,cAAK,IAAI,CAAC,aAAa,EAAK,IAAI,CAAC,UAAU,EAAE,CAAC;KAC1E;;;;;IAGD,uCAAY;;;;IADZ,UACa,MAAM;;YACX,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK;QACxC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC;KACnE;;;;;IAGD,sCAAW;;;;IADX,UACY,MAAM;;YACV,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK;QACxC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;KACzE;;;;;;;IAES,wCAAa;;;;;;IAAvB,UAAwB,KAAK,EAAE,SAAiB;QAAjB,0BAAA,EAAA,iBAAiB;;YAC1C,QAAQ,GAAG,KAAK;QACpB,IAAI,QAAQ,KAAK,EAAE,IAAI,QAAQ,KAAK,GAAG,EAAE;YACvC,OAAO,SAAS,GAAG,EAAE,GAAG,QAAQ,CAAC;SAClC;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,EAAE;YAC7B,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAC5D,IACE,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;mBAC1D,CAAC,SAAS,EACb;gBACA,OAAO,QAAQ,CAAC;aACjB;YACD,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC;SACjC;aAAM;YACL,QAAQ,GAAG,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;SACnC;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,SAAS,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;YAC/D,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;SAC5B;aAAM,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,SAAS,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;YACtE,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;SAC5B;QACD,OAAO,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,QAAQ,CAAC;KACxC;;;;;IAGD,yCAAc;;;;IADd,UACe,CAAgB;;YACvB,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK;QACrD;;QAEE;YACEA,UAAmB;YACnBC,WAAoB;YACpBC,SAAkB;YAClBC,MAAe;YACfC,GAAY;YACZC,KAAc;YACdC,MAAe;YACfC,IAAa;YACbC,GAAY;SACb,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;;gBAGzB;gBACEC,CAAU;gBACVC,CAAU;gBACVC,CAAU;gBACVC,CAAU;gBACVC,CAAU;aACX,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;oBACvB,CAAC,CAAC,OAAO,KAAK,IAAI,IAAI,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,CAC9C,EACD;YACA,OAAO;SACR;;QAGD,IACE,CAACC,IAAa,EAAEC,YAAqB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;eAC7D,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,cAAc,KAAK,CAAC;gBAC9C,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,SAAS,CAAC;gBACxF,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,SAAS,CAAC;eACzF,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EACnC;YACA,OAAO;SACR;;QAGD,IACE,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC;eACtB,CAACC,KAAc,EAAEC,aAAsB,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;eACvE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,cAAc,GAAG,CAAC;eAC7C,YAAY,CAAC,MAAM;eACnB,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EACrD;YACA,OAAO;SACR;;QAGD,IACE,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC;eACtB,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;eAChD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,cAAc,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAC1F;YACM,IAAA,yDAAwD,EAArD,gBAAqD;YAC9D,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;gBACxD,CAAC,CAAC,cAAc,EAAE,CAAC;aACpB;SACF;;QAGD,IACE,CACE,CACE;YACEC,IAAa;YACbC,GAAY;YACZC,GAAY;YACZC,KAAc;YACdC,IAAa;YACbC,IAAa;YACbC,GAAY;YACZC,KAAc;YACdC,KAAc;YACdC,IAAa;SACd,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;eACxB,CAAC,CAAC,QAAQ;;gBAGf;oBACEC,WAAoB;oBACpBC,UAAmB;oBACnBC,UAAmB;oBACnBC,YAAqB;oBACrBC,WAAoB;oBACpBC,WAAoB;oBACpBC,UAAmB;oBACnBC,YAAqB;oBACrBC,YAAqB;oBACrBC,WAAoB;iBACrB,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBAEzB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,cAAc,KAAK,CAAC,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EACtF;YACA,CAAC,CAAC,cAAc,EAAE,CAAC;SACpB;KACF;;gBA3JF,SAAS,SAAC;oBACT,QAAQ,EAAE,cAAc;iBACzB;;;;gBAnBkB,UAAU;gBAErB,SAAS;;;6BAmBd,KAAK;+BAaL,YAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;8BAMhC,YAAY,SAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;iCA+B/B,YAAY,SAAC,SAAS,EAAE,CAAC,QAAQ,CAAC;;IAsGrC,uBAAC;CA5JD;;;;;;ACjBA;IAGA;KAUC;;gBAVA,QAAQ,SAAC;oBACR,YAAY,EAAE;wBACZ,gBAAgB;qBACjB;oBACD,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE;wBACP,gBAAgB;qBACjB;iBACF;;IAED,oBAAC;CAVD;;;;;;;;;;;;;;"}
