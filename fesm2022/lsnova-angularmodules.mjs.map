{"version":3,"file":"lsnova-angularmodules.mjs","sources":["../../../projects/lsn-libs/src/lib/directives/numeric/numeric-config.service.ts","../../../projects/lsn-libs/src/lib/directives/numeric/numeric.directive.ts","../../../projects/lsn-libs/src/lib/directives/numeric/numeric.module.ts","../../../projects/lsn-libs/src/lib/directives/numpad/numpad.directive.ts","../../../projects/lsn-libs/src/lib/directives/numpad/numpad.module.ts","../../../projects/lsn-libs/src/lib/directives/latin-to-greek/latin-to-greek.directive.ts","../../../projects/lsn-libs/src/lib/directives/latin-to-greek/latin-to-greek.module.ts","../../../projects/lsn-libs/src/lib/directives/capitalize/capitalize.directive.ts","../../../projects/lsn-libs/src/lib/directives/capitalize/capitalize.module.ts","../../../projects/lsn-libs/src/lib/directives/scroll-spy/scroll-spy.directive.ts","../../../projects/lsn-libs/src/lib/directives/scroll-spy/scroll-spy.module.ts","../../../projects/lsn-libs/src/lib/services/lsn-cookie/lsn-cookie.module.ts","../../../projects/lsn-libs/src/lib/services/lsn-cross-tab/lsn-cross-tab.module.ts","../../../projects/lsn-libs/src/lib/lsn-libs.module.ts","../../../projects/lsn-libs/src/lib/services/lsn-cross-tab/models/lsnCrossTabConfig.ts","../../../projects/lsn-libs/src/lib/services/lsn-cross-tab/models/lsnCrossTabMessage.ts","../../../projects/lsn-libs/src/lib/services/lsn-cookie/lsnCookieConfig.ts","../../../projects/lsn-libs/src/lib/services/lsn-cookie/lsn-cookie.service.ts","../../../projects/lsn-libs/src/lib/services/lsn-cross-tab/lsn-cross-tab.service.ts","../../../projects/lsn-libs/src/public_api.ts","../../../projects/lsn-libs/src/lsnova-angularmodules.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\n\nenum NumericSeparator {\n  COMMA = ',',\n  PERIOD = '.',\n  SPACE = ' '\n}\n\nexport interface NumericConfig {\n  min?: number;\n  max?: number;\n  maxLength?: number;\n  precision?: number;\n  decimals?: string;\n  thousands?: string;\n  config?: string;\n  step?: number;\n  noScientificNotation?: boolean;\n  alwaysDisplayDecimals?: boolean;\n}\n\nexport class DefaultNumericConfig implements NumericConfig {\n  min: number;\n  max: number;\n  maxLength: number;\n  precision = 0;\n  decimals: string = NumericSeparator.PERIOD;\n  thousands: string;\n  step: number;\n  noScientificNotation = false;\n  alwaysDisplayDecimals = false;\n\n  constructor(props = {}) {\n    Object.assign(this, props);\n  }\n}\n\nexport class CustomNumericConfig {\n  default?: NumericConfig;\n  custom?: { [key: string]: NumericConfig };\n\n  constructor(props = {}) {\n    Object.assign(this, props);\n  }\n}\n\n@Injectable()\nexport class NumericConfigService {\n  private config: CustomNumericConfig;\n\n  constructor(config: CustomNumericConfig) {\n\n    let moduleConfig = new CustomNumericConfig();\n    if (config) {\n      moduleConfig = Object.assign(moduleConfig, config);\n    }\n\n    const numericConfig = moduleConfig.default || {};\n    const customConfig = moduleConfig.custom || {};\n    this.config = new CustomNumericConfig({\n      default: new DefaultNumericConfig(numericConfig),\n      custom: customConfig,\n    });\n  }\n\n  getDefaultConfig() {\n    return this.config.default;\n  }\n\n  getCustomConfig(key) {\n    if (!this.config.custom[key]) {\n      console.warn('[lsnNumeric] Invalid config key provided.');\n    }\n    return {...this.getDefaultConfig(), ...this.config.custom[key]} || this.getDefaultConfig();\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostListener,\n  Input,\n  Output,\n} from '@angular/core';\nimport * as keyboard from '@angular/cdk/keycodes';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {NumericConfig, NumericConfigService} from './numeric-config.service';\n\nconst CUSTOM_SELECT_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NumericDirective),\n  multi: true\n};\n\nexport enum NumericMessage {\n  ADDITIONAL_DECIMAL_SEPARATOR,\n  RANGE_EXCEEDED\n}\n\nconst initialConfigValue: NumericConfig = {};\n\n@Directive({\n  selector: '[lsnNumeric]',\n  providers: [CUSTOM_SELECT_VALUE_ACCESSOR],\n  standalone: false\n})\nexport class NumericDirective implements ControlValueAccessor {\n  protected _lsnNumeric: NumericConfig = initialConfigValue;\n  @Input()\n  set lsnNumeric(newValue: NumericConfig) {\n    const firstChange = this._lsnNumeric === initialConfigValue;\n    const shouldParseConfig = !firstChange && !this.isConfigEqual(this._lsnNumeric, newValue);\n    this._lsnNumeric = newValue;\n    this.setConfig();\n    if (shouldParseConfig) {\n      this.blurHandler();\n    }\n  }\n  get lsnNumeric() {\n    return this._lsnNumeric;\n  }\n  @Output() lsnNumericMessages = new EventEmitter<NumericMessage>();\n  element: ElementRef;\n  protected config: NumericConfig;\n  public onChange = (_: any) => {\n  }\n  public onTouch = () => {\n  }\n\n  constructor(\n    private el: ElementRef,\n    private configService: NumericConfigService,\n  ) {\n    this.element = el;\n    this.setConfig();\n  }\n\n  @HostListener('input', ['$event'])\n  inputHandler($event) {\n    if ($event.target.value === '-') {\n      return;\n    }\n    let value = this.removeInvalidCharacters($event.target.value);\n    value = this.handleWholesLength(value);\n    const parsedValue = this.parseValue(value);\n    this.displayValue = value.replace(/[,|.]/, this.config.decimals);\n    this.onChange(parsedValue);\n  }\n\n  @HostListener('focus', [])\n  focusHandler() {\n    this.setEditMode();\n  }\n\n  @HostListener('blur', [])\n  blurHandler() {\n    const parsedValue: number = this.parseValue(this.element.nativeElement.value);\n    const rangeValue = this.handleRange(parsedValue);\n    if (rangeValue !== parsedValue){\n      this.lsnNumericMessages.emit(NumericMessage.RANGE_EXCEEDED);\n    }\n    // correct entered value on blur to proper range value\n    if (parsedValue !== rangeValue) {\n      this.displayValue = rangeValue.toString().replace(/[,|.]/, this.config.decimals);\n      this.onChange(rangeValue);\n    } else if (this.config.step && !isNaN(parsedValue)) {\n      // correct entered value on blur to proper step value\n      const stepValue = this.handleStep(parsedValue);\n      this.displayValue = stepValue.toString().replace(/[,|.]/, this.config.decimals);\n      this.onChange(stepValue);\n    }\n    this.displayValue = this.prepareDisplayValue(this.element.nativeElement.value);\n    if (this.onTouch) {\n      // if user sets updateOn to 'blur', we have to call onTouch for it to work properly\n      this.onTouch();\n    }\n  }\n\n  public async writeValue(modelValue: string): Promise<void> {\n    const parsedValue = this.parseValue(modelValue);\n    this.displayValue = this.prepareDisplayValue(parsedValue);\n  }\n\n  public registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  get displayValue() {\n    return this.element.nativeElement.value;\n  }\n\n  set displayValue(value) {\n    this.element.nativeElement.value = value;\n  }\n\n  setConfig() {\n    const defaultConfig = this.lsnNumeric.config\n      ? this.configService.getCustomConfig(this.lsnNumeric.config)\n      : this.configService.getDefaultConfig();\n    this.config = Object.assign({...defaultConfig, ...this.lsnNumeric});\n    if (this.config.decimals && this.config.thousands && this.config.decimals === this.config.thousands) {\n      this.config.thousands = undefined;\n    }\n    if (this.config.max !== undefined && this.config.maxLength !== undefined) {\n      console.warn('[lsnNumeric] Setting `maxLength` makes `max` redundant.');\n    }\n  }\n\n  parseValue(value) {\n    if (!value && value !== 0) {\n      return undefined;\n    }\n    const newValue = value.toString().replace(/[,|.]/, '.');\n    const parsedValue = this.config.precision > 0\n      ? parseFloat(newValue)\n      : parseInt(newValue, 10);\n    return isNaN(parsedValue) ? undefined : parsedValue;\n  }\n\n  handleWholesLength(value) {\n    if (this.config.maxLength) {\n      const negativeSign = value.toString().startsWith('-') ? '-' : '';\n      const absoluteValue = value.toString()\n        .replace(/^-/, '')\n        .replace(/[,|.]/, this.config.decimals);\n      if (absoluteValue.toString().includes(this.config.decimals)) {\n        const [wholes, decimals] = absoluteValue.toString().split(this.config.decimals);\n        const properDecimals = this.removeInvalidCharacters(decimals, true);\n        return negativeSign + wholes.substr(0, this.config.maxLength) + this.config.decimals + properDecimals;\n      }\n      return negativeSign + absoluteValue.toString().substr(0, this.config.maxLength);\n    }\n    return value;\n  }\n\n  removeInvalidCharacters(value, allowDecimalsOnly = false) {\n    return this.cleanUp(\n      allowDecimalsOnly\n        ? value.replace(/[^\\-0-9]/g, '')\n        : value.replace(/[^\\-0-9,.]/g, '')\n    );\n  }\n\n  private cleanUp(input) {\n    // no precision at all\n    let value = input.replace(/[,|.]/g, '.');\n    const firstIndex = typeof value === 'string' || value instanceof String\n      ? value.indexOf('.')\n      : -1;\n    if (firstIndex === -1) {\n      return value;\n    }\n\n    // remove everything after second comma\n    const secondIndex = value.substr(firstIndex + 1).indexOf('.');\n    if (secondIndex !== -1) {\n      this.lsnNumericMessages.emit(NumericMessage.ADDITIONAL_DECIMAL_SEPARATOR);\n      value = value.substr(0, firstIndex + secondIndex + 1);\n    }\n\n    // remove additional precision\n    if (this.config.precision === 0) {\n      return value.substr(0, firstIndex);\n    } else if (this.config.precision) {\n      return value.substr(0, firstIndex + this.config.precision + 1);\n    }\n    return value;\n  }\n\n  handleRange(value) {\n    if (!this.config.maxLength && this.config.max !== undefined && value > this.config.max) {\n      return this.config.max;\n    } else if (this.config.min !== undefined && value < this.config.min) {\n      return this.config.min;\n    }\n    return value;\n  }\n\n  handleStep(value: number): number {\n    return Math.round(value / this.config.step) * this.config.step;\n  }\n\n  prepareDisplayValue(value) {\n    if (!value && value !== 0) {\n      return '';\n    }\n    const [whole, decimals] = this.getWholeAndDecimalParts(value);\n    const isNegative = whole[0] === '-' || (whole as number) < 0;\n    let result = whole === '-' || !whole\n      ? '0'\n      : this.getWholeDisplayValue(whole);\n    if (this.config.thousands) {\n      result = result.replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.config.thousands);\n    }\n    if (this.config.precision && this.config.decimals) {\n      if (this.config.alwaysDisplayDecimals && this.shouldAddDefaultDecimals(decimals)) {\n        result = result + this.config.decimals + this.defaultDecimals(decimals, this.config.precision);\n      } else if (decimals) {\n        result = result + this.config.decimals + decimals;\n      }\n    }\n    return isNegative && result !== '0' ? '-' + result : result;\n  }\n\n  setEditMode() {\n    if (this.config.thousands) {\n      const currentValue = this.element.nativeElement.value;\n      const [whole, decimals] = currentValue.split(this.config.decimals);\n      const regex = new RegExp('\\\\' + this.config.thousands, 'g');\n      let result = whole.replace(regex, '');\n      if (decimals && this.config.precision && this.config.decimals) {\n        result = result + this.config.decimals + decimals;\n      }\n      this.displayValue = result;\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  keyDownHandler(e: KeyboardEvent) {\n    const currentValue = this.element.nativeElement.value;\n    if (\n      // Allow special keys\n      [\n        keyboard.LEFT_ARROW,\n        keyboard.RIGHT_ARROW,\n        keyboard.BACKSPACE,\n        keyboard.DELETE,\n        keyboard.END,\n        keyboard.ENTER,\n        keyboard.ESCAPE,\n        keyboard.HOME,\n        keyboard.TAB,\n      ].indexOf(e.keyCode) !== -1\n      // Allow Ctrl+key actions\n      || (\n        [\n          keyboard.A,\n          keyboard.C,\n          keyboard.R,\n          keyboard.V,\n          keyboard.X,\n        ].indexOf(e.keyCode) !== -1\n        && (e.ctrlKey === true || e.metaKey === true)\n      )\n    ) {\n      return;  // let it happen, don't do anything\n    }\n\n    // Handle maxLength\n    const absoluteValue = currentValue.toString().replace(/^-/, '');\n    const [wholes] = absoluteValue.toString().split(this.config.decimals);\n    if (\n      this.config.maxLength !== undefined\n      && (\n        this.element.nativeElement.selectionStart < wholes.length\n        && wholes.length >= this.config.maxLength\n        && [keyboard.DASH, keyboard.NUMPAD_MINUS].indexOf(e.keyCode) === -1\n      )\n      && this.element.nativeElement.selectionEnd - this.element.nativeElement.selectionStart === 0\n    ) {\n      e.preventDefault();\n    }\n\n    // Handle minus\n    if (\n      [keyboard.DASH, keyboard.NUMPAD_MINUS].indexOf(e.keyCode) !== -1\n      && this.element.nativeElement.selectionStart === 0\n      && ((this.config.min !== undefined && this.config.min < 0) || this.config.min === undefined)\n      && currentValue.indexOf('-') === -1\n    ) {\n      return;\n    }\n\n    // Handle separator\n    if (\n      this.config.precision > 0\n      && [keyboard.COMMA, keyboard.NUMPAD_PERIOD, 190].indexOf(e.keyCode) !== -1\n      && this.element.nativeElement.selectionStart > 0\n      && currentValue.length\n      && currentValue.indexOf('.') === -1\n      && currentValue.indexOf(',') === -1\n    ) {\n      return;\n    }\n\n    // Handle key after separator\n    if (\n      this.config.precision > 0\n      && currentValue.indexOf(this.config.decimals) > -1\n      && this.element.nativeElement.selectionStart > currentValue.indexOf(this.config.decimals)\n    ) {\n      const [, decimals] = currentValue.split(this.config.decimals);\n      if (decimals && decimals.length >= this.config.precision) {\n        e.preventDefault();\n      }\n    }\n    // Ensure that it is a number or stop the keypress\n    if (\n      (\n        (\n          [\n            keyboard.ZERO,\n            keyboard.ONE,\n            keyboard.TWO,\n            keyboard.THREE,\n            keyboard.FOUR,\n            keyboard.FIVE,\n            keyboard.SIX,\n            keyboard.SEVEN,\n            keyboard.EIGHT,\n            keyboard.NINE\n          ].indexOf(e.keyCode) === -1\n          || e.shiftKey\n        )\n        &&\n        [\n          keyboard.NUMPAD_ZERO,\n          keyboard.NUMPAD_ONE,\n          keyboard.NUMPAD_TWO,\n          keyboard.NUMPAD_THREE,\n          keyboard.NUMPAD_FOUR,\n          keyboard.NUMPAD_FIVE,\n          keyboard.NUMPAD_SIX,\n          keyboard.NUMPAD_SEVEN,\n          keyboard.NUMPAD_EIGHT,\n          keyboard.NUMPAD_NINE,\n        ].indexOf(e.keyCode) === -1\n      )\n      || (\n        this.element.nativeElement.selectionStart === 0\n        && this.element.nativeElement.selectionEnd === 0\n        && currentValue.indexOf('-') > -1\n      )\n    ) {\n      e.preventDefault();\n    }\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.element.nativeElement.disabled = isDisabled;\n  }\n\n  /**\n   * parse whole part of a number to display value (based on given config)\n   */\n  protected getWholeDisplayValue(whole: string | number): string {\n    const parsedWhole: number = Math.abs(typeof whole !== 'number' ? parseInt(whole, 10) : whole);\n    return this.config.noScientificNotation\n      ? parsedWhole.toLocaleString('fullwide', {useGrouping: false})\n      : parsedWhole.toString();\n  }\n\n  /**\n   * get whole and decimal part of a number\n   * type of return values may vary, it is intentional\n   * the returned array should have size of 1(only whole number) or 2(whole and decimal)\n   */\n  protected getWholeAndDecimalParts(value: string | number): Array<number | string> {\n    if (typeof value === 'number') {\n      if (this.config.noScientificNotation && (value > Number.MAX_SAFE_INTEGER || value < Number.MIN_SAFE_INTEGER)) {\n        const decimals = value % 1;\n        return [Math.floor(value), decimals !== 0 ? '' + decimals : undefined];\n      } else {\n        return value.toString().split('.');\n      }\n    } else {\n      return value.toString().split(this.config.decimals);\n    }\n  }\n\n  protected defaultDecimals(value: string | number = '', precision: number = 0): string {\n    let result = '' + value;\n    while (result.length < precision) {\n      result += '0';\n    }\n    return result;\n  }\n\n  protected shouldAddDefaultDecimals(decimals: string | number | undefined): boolean {\n    return !decimals || ('' + decimals).length !== this.config.precision;\n  }\n\n  isConfigEqual(config1?: NumericConfig, config2?: NumericConfig): boolean {\n    if ((config1 && !config2) || (!config1 && config2)) {\n      return false;\n    } else if (!config1 && !config2) {\n      return true;\n    } else if (Object.keys(config1).length === Object.keys(config2).length) {\n      for (const key1 in config1) {\n        if (config1.hasOwnProperty(key1) && config1[key1] !== config2[key1]) {\n          return false;\n        }\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {NumericDirective} from './numeric.directive';\nimport {NumericConfigService, CustomNumericConfig} from './numeric-config.service';\n\n@NgModule({\n  declarations: [\n    NumericDirective,\n  ],\n  exports: [\n    NumericDirective,\n  ]\n})\nexport class LsnNumericModule {\n  static forRoot(config?: CustomNumericConfig): ModuleWithProviders<LsnNumericModule> {\n    return {\n      ngModule: LsnNumericModule,\n      providers: [\n        NumericConfigService,\n        {provide: CustomNumericConfig, useValue: config}\n      ]\n    };\n  }\n}\n","import {Directive, ElementRef, HostListener, Input, OnChanges, Optional} from '@angular/core';\nimport * as keyboard from '@angular/cdk/keycodes';\nimport {NgControl} from '@angular/forms';\n\nclass NumPadConfig {\n  maxlength: number;\n  allowLeadingZeros = false;\n}\n\n@Directive({\n  selector: '[lsnNumPad]',\n  standalone: false\n})\nexport class NumPadDirective implements OnChanges {\n  @Input() lsnNumPad = {};\n  protected config: NumPadConfig;\n  private defaultConfig: NumPadConfig = new NumPadConfig();\n\n  constructor(private element: ElementRef, @Optional() private ngControl: NgControl) {\n  }\n\n  ngOnChanges() {\n    this.config = Object.assign({...this.defaultConfig, ...this.lsnNumPad});\n  }\n\n  @HostListener('input', ['$event'])\n  inputHandler($event) {\n    const currentValue = $event.target.value;\n    this.setValue(this.parseNewValue(currentValue));\n  }\n\n  @HostListener('blur', ['$event'])\n  blurHandler($event) {\n    const currentValue = $event.target.value;\n    this.setValue(this.parseNewValue(currentValue, true));\n  }\n\n  protected setValue(value) {\n    if (this.ngControl && this.ngControl.control) {\n      this.ngControl.control.setValue(value);\n    } else {\n      this.element.nativeElement.value = value;\n    }\n  }\n\n  protected parseNewValue(value, blurEvent = false) {\n    let newValue = value.replace(/[^0-9]/g, '');\n    if (newValue === '') {\n      return blurEvent ? '' : newValue;\n    }\n    if (this.config.maxlength && this.config.maxlength > 0) {\n      newValue = newValue.substring(0, this.config.maxlength);\n    }\n    if (!this.config.allowLeadingZeros && blurEvent) {\n      newValue = newValue.replace(/^0+/, '');\n    }\n    return newValue;\n  }\n\n  @HostListener('keydown', ['$event'])\n  keyDownHandler(e: KeyboardEvent) {\n    const currentValue = this.element.nativeElement.value;\n    if (\n      // Allow special keys\n      [\n        keyboard.LEFT_ARROW,\n        keyboard.RIGHT_ARROW,\n        keyboard.BACKSPACE,\n        keyboard.DELETE,\n        keyboard.END,\n        keyboard.ENTER,\n        keyboard.ESCAPE,\n        keyboard.HOME,\n        keyboard.TAB,\n      ].indexOf(e.keyCode) !== -1\n      // Allow Ctrl+key actions\n      || (\n        [\n          keyboard.A,\n          keyboard.C,\n          keyboard.R,\n          keyboard.V,\n          keyboard.X,\n        ].indexOf(e.keyCode) !== -1\n        && (e.ctrlKey === true || e.metaKey === true)\n      )\n    ) {\n      return;  // let it happen, don't do anything\n    }\n\n    // Ensure that it is a number or stop the keypress\n    if (\n      (\n        (\n          [\n            keyboard.ZERO,\n            keyboard.ONE,\n            keyboard.TWO,\n            keyboard.THREE,\n            keyboard.FOUR,\n            keyboard.FIVE,\n            keyboard.SIX,\n            keyboard.SEVEN,\n            keyboard.EIGHT,\n            keyboard.NINE\n          ].indexOf(e.keyCode) === -1\n          || e.shiftKey\n        )\n        &&\n        [\n          keyboard.NUMPAD_ZERO,\n          keyboard.NUMPAD_ONE,\n          keyboard.NUMPAD_TWO,\n          keyboard.NUMPAD_THREE,\n          keyboard.NUMPAD_FOUR,\n          keyboard.NUMPAD_FIVE,\n          keyboard.NUMPAD_SIX,\n          keyboard.NUMPAD_SEVEN,\n          keyboard.NUMPAD_EIGHT,\n          keyboard.NUMPAD_NINE,\n        ].indexOf(e.keyCode) === -1\n      )\n      || (\n        currentValue.length\n        && this.config.maxlength && this.config.maxlength > 0\n        && currentValue.length >= this.config.maxlength\n        && this.element.nativeElement.selectionEnd - this.element.nativeElement.selectionStart === 0\n      )\n    ) {\n      e.preventDefault();\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {NumPadDirective} from './numpad.directive';\n\n@NgModule({\n  declarations: [\n    NumPadDirective,\n  ],\n  imports: [],\n  exports: [\n    NumPadDirective,\n  ]\n})\nexport class LsnNumpadModule {\n}\n","import {Directive, ElementRef, HostListener} from '@angular/core';\nimport {NgModel} from '@angular/forms';\n\n\n@Directive({\n  selector: '[ngModel][lsnLatinToGreek]',\n  providers: [NgModel],\n  standalone: false\n})\nexport class LatinToGreekDirective {\n\n  private latinToGreek = [\n    [/A/ig, 'Α'],\n    [/B/ig, 'Β'],\n    [/G/ig, 'Γ'],\n    [/D/ig, 'Δ'],\n    [/E/ig, 'Ε'],\n    [/Z/ig, 'Ζ'],\n    [/H/ig, 'Η'],\n    [/U/ig, 'Θ'],\n    [/I/ig, 'Ι'],\n    [/K/ig, 'Κ'],\n    [/L/ig, 'Λ'],\n    [/M/ig, 'Μ'],\n    [/N/ig, 'Ν'],\n    [/J/ig, 'Ξ'],\n    [/O/ig, 'Ο'],\n    [/P/ig, 'Π'],\n    [/R/ig, 'Ρ'],\n    [/S/ig, 'Σ'],\n    [/T/ig, 'Τ'],\n    [/Y/ig, 'Υ'],\n    [/F/ig, 'Φ'],\n    [/X/ig, 'Χ'],\n    [/C/ig, 'Ψ'],\n    [/V/ig, 'Ω'],\n    [/W/ig, 'W'],\n    [/Q/ig, 'Q']\n  ];\n\n  constructor(private model: NgModel, private el: ElementRef) {\n  }\n\n  private getCaret() {\n    return {\n      start: this.el.nativeElement.selectionStart,\n      end: this.el.nativeElement.selectionEnd,\n    };\n  }\n\n  private setCaret(start, end) {\n    this.el.nativeElement.selectionStart = start;\n    this.el.nativeElement.selectionEnd = end;\n    this.el.nativeElement.focus();\n  }\n\n\n  @HostListener('ngModelChange', ['$event'])\n  onInputChange($event) {\n    const {start, end} = this.getCaret();\n\n    let translated = $event.toLocaleUpperCase();\n    this.latinToGreek.forEach(replace => {\n      translated = translated.replace(replace[0], replace[1]);\n    });\n    this.model.valueAccessor.writeValue(translated);\n    this.setCaret(start, end);\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {LatinToGreekDirective} from './latin-to-greek.directive';\n\n@NgModule({\n  declarations: [\n    LatinToGreekDirective,\n  ],\n  imports: [],\n  exports: [\n    LatinToGreekDirective,\n  ]\n})\nexport class LsnLatinToGreekModule {\n}\n","import {Directive, HostListener} from '@angular/core';\nimport {NgModel} from '@angular/forms';\n\n@Directive({\n  selector: '[ngModel][lsnCapitalize]',\n  providers: [NgModel],\n  standalone: false\n})\nexport class CapitalizeDirective {\n  constructor(private model: NgModel) {\n  }\n\n  @HostListener('ngModelChange', ['$event'])\n  onInputChange($event) {\n    this.model.valueAccessor.writeValue($event.toLocaleUpperCase());\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CapitalizeDirective} from './capitalize.directive';\n\n@NgModule({\n  declarations: [\n    CapitalizeDirective,\n  ],\n  imports: [],\n  exports: [\n    CapitalizeDirective,\n  ]\n})\nexport class LsnCapitalizeModule {\n}\n","import { Directive, ElementRef, EventEmitter, HostListener, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter, tap } from 'rxjs/operators';\n\n@Directive({\n  selector: '[lsnScrollSpy]',\n  standalone: false\n})\nexport class ScrollSpyDirective implements OnInit, OnDestroy {\n\n  @Input()\n  spySelector: string;\n\n  @Input()\n  scrollToSection: Observable<string>;\n\n  @Output()\n  spySectionChange = new EventEmitter<string>();\n\n  private scrollOffset: number;\n  private currentSection$: Subject<string>;\n  private disableEmitter = false;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(private elementRef: ElementRef) {\n    this.currentSection$ = new Subject();\n  }\n\n  ngOnInit(): void {\n    this.scrollOffset = this.nativeElement().offsetTop;\n\n    // emit event on section change\n    const sectionChangeSub = this.currentSection$.pipe(\n      distinctUntilChanged(),\n      tap((sectionId) => this.spySectionChange.emit(sectionId))\n    ).subscribe();\n\n    // scroll to given section\n    const scrollToSub = this.scrollToSection.pipe(\n      filter((section) => !!section),\n      tap((section) => this.scrollTo(section))\n    ).subscribe();\n\n    this.subscriptions.push(sectionChangeSub, scrollToSub);\n  }\n\n  @HostListener('scroll')\n  onScroll() {\n    const section: HTMLElement = this.findCurrentSection();\n    if (section) {\n      this.setCurrentSection(section.id);\n    }\n  }\n\n  @HostListener('window:resize')\n  onResize() {\n    this.onScroll();\n  }\n\n  private scrollTo(sectionId) {\n    this.disableEmitter = true;\n\n    this.nativeElement().querySelector('#' + sectionId).scrollIntoView();\n\n    // set timeout to enforce scroll event execute before enabling back the emitter\n    setTimeout(() => {\n      this.disableEmitter = false;\n    }, 0);\n  }\n\n  private findCurrentSection(): HTMLElement {\n    const scrollMiddle = (this.scrollTopPosition() + this.scrollBottomPosition()) / 2;\n    const spiedSections = this.getSpiedSections();\n    return spiedSections.find((section) => this.isCurrentSection(section, scrollMiddle));\n  }\n\n  private getSpiedSections(): HTMLElement[] {\n    return Array.from(this.nativeElement().querySelectorAll(this.spySelector));\n  }\n\n  private isCurrentSection(section: HTMLElement, scrollMiddle: number): boolean {\n    return this.sectionTopPosition(section) <= scrollMiddle\n      && this.sectionBottomPosition(section) > scrollMiddle;\n  }\n\n  private setCurrentSection(sectionId: string) {\n    if (!this.disableEmitter) {\n      this.currentSection$.next(sectionId);\n    }\n  }\n\n  private sectionTopPosition(section: HTMLElement) {\n    return section.offsetTop;\n  }\n\n  private sectionBottomPosition(section: HTMLElement) {\n    return section.offsetTop + section.offsetHeight;\n  }\n\n  private scrollTopPosition() {\n    return this.scrollOffset + this.nativeElement().scrollTop;\n  }\n\n  private scrollBottomPosition() {\n    return this.scrollOffset + this.nativeElement().scrollTop + this.nativeElement().offsetHeight;\n  }\n\n  private nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ScrollSpyDirective } from './scroll-spy.directive';\n\n@NgModule({\n  declarations: [\n    ScrollSpyDirective,\n  ],\n  imports: [],\n  exports: [\n    ScrollSpyDirective,\n  ]\n})\nexport class LsnScrollSpyModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class LsnCookieModule { }\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LsnCookieModule} from '../lsn-cookie/lsn-cookie.module';\nimport {LsnCrossTabService} from './lsn-cross-tab.service';\n\nexport function lsnCrossTabServiceFactory(lsnCrossTabService: LsnCrossTabService) {\n  return () => lsnCrossTabService.run();\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LsnCookieModule\n  ],\n  exports: [\n    LsnCookieModule\n  ]\n})\nexport class LsnCrossTabModule {\n}\n","import {NgModule} from '@angular/core';\nimport {LsnNumericModule} from './directives/numeric/numeric.module';\nimport {LsnNumpadModule} from './directives/numpad/numpad.module';\nimport {LsnLatinToGreekModule} from './directives/latin-to-greek/latin-to-greek.module';\nimport {LsnCapitalizeModule} from './directives/capitalize/capitalize.module';\nimport {LsnScrollSpyModule} from './directives/scroll-spy/scroll-spy.module';\nimport {FormsModule} from '@angular/forms';\nimport {LsnCrossTabModule} from './services/lsn-cross-tab/lsn-cross-tab.module';\nimport {LsnCookieModule} from './services/lsn-cookie/lsn-cookie.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    FormsModule,\n    LsnCapitalizeModule,\n    LsnLatinToGreekModule,\n    LsnNumericModule.forRoot({\n      default: {\n        decimals: '.',\n        precision: 4,\n      },\n      custom: {\n        currency: {\n          decimals: ',',\n          thousands: ' ',\n          precision: 2,\n        }\n      }\n    }),\n    LsnNumpadModule,\n    LsnCookieModule,\n    LsnCrossTabModule,\n    LsnScrollSpyModule\n  ],\n  exports: [\n    LsnCapitalizeModule,\n    LsnLatinToGreekModule,\n    LsnNumericModule,\n    LsnNumpadModule,\n    LsnCookieModule,\n    LsnCrossTabModule,\n    LsnScrollSpyModule\n  ]\n})\nexport class LsnLibsModule {\n}\n","import {InjectionToken} from '@angular/core';\n\nexport class LsnCrossTabConfig {\n  cookieCleanFreq: number;\n  cookieReadFreq: number;\n  msgTtl: number; // represents duration of existence of given cross tab message, after this period from message creation, the message will be deleted from cookie\n  rootDomain: string;\n  crossTabCookieName: string;\n\n  constructor({cookieCleanFreq = null, cookieReadFreq = null, msgTtl = null, rootDomain = null, crossTabCookieName = null} = {}) {\n    this.cookieCleanFreq = cookieCleanFreq;\n    this.cookieReadFreq = cookieReadFreq;\n    this.msgTtl = msgTtl;\n    this.rootDomain = rootDomain;\n    this.crossTabCookieName = crossTabCookieName;\n  }\n}\n\nexport const LSN_CROSS_TAB_CONFIG = new InjectionToken<LsnCrossTabConfig>('LsnCrossTabConfig');\n","export class LsnCrossTabMessage<T extends object = any> {\n  created?: number;\n  code?: string;\n  tabId?: string;\n  attrs?: T;\n\n  constructor({created = null, code = null, tabId = null, attrs = null}: LsnCrossTabMessage<T> = {}) {\n    this.created = created;\n    this.code = code;\n    this.tabId = tabId;\n    this.attrs = attrs;\n  }\n\n  static compare(firstMessage: LsnCrossTabMessage, secondMessage: LsnCrossTabMessage) {\n    if (!firstMessage || !secondMessage) {\n      return false;\n    }\n    if (firstMessage.created !== secondMessage.created) {\n      return false;\n    }\n    if (firstMessage.code !== secondMessage.code) {\n      return false;\n    }\n    return firstMessage.tabId !== secondMessage.tabId;\n  }\n}\n","import {InjectionToken} from '@angular/core';\n\nexport class LsnCookieConfig {\n  secureCookies: boolean;\n  domainCookies: boolean;\n\n  constructor({\n                secureCookies = null, domainCookies = null\n              } = {}) {\n    this.secureCookies = secureCookies;\n    this.domainCookies = domainCookies;\n  }\n}\n\nexport const LSN_COOKIE_CONFIG = new InjectionToken<LsnCookieConfig>('LsnCookieConfig');\n","import {Inject, Injectable} from '@angular/core';\nimport {LSN_COOKIE_CONFIG, LsnCookieConfig} from './lsnCookieConfig';\nimport {DOCUMENT} from '@angular/common';\n\nexport interface LsnCookieOptions {\n  expires?: number | Date;\n  expirationUnit?: string;\n  path?: string;\n  domain?: string | boolean;\n  secure?: boolean;\n}\n\nexport interface CookieService {\n  set(cookieKey: string, cookieValue, cookieOptions: LsnCookieOptions): void;\n\n  get(cookieKey?: string): any;\n\n  remove(cookieKey: string, cookieOptions: LsnCookieOptions): void;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LsnCookieService implements CookieService {\n\n  constructor(@Inject(LSN_COOKIE_CONFIG) private cookieConfig: LsnCookieConfig, @Inject(DOCUMENT) readonly document: any) {\n  }\n\n  /**\n   * Sets cookie with given key to given value, cookie options are optional, if not set, some properties\n   * (secure and domain) will be set from global cookie config\n   */\n  set(cookieKey: string, cookieValue: any, cookieOptions?: LsnCookieOptions) {\n    const options = {\n      ...cookieOptions,\n      secure: cookieOptions && cookieOptions.secure ? cookieOptions.secure : this.cookieConfig.secureCookies\n    };\n    if (!this.cookieConfig.domainCookies) {\n      options.domain = false;\n    }\n    const value = JSON.stringify(cookieValue);\n    let expiresFor;\n\n    if (typeof options.expires === 'number') {\n      expiresFor = options.expires;\n      options.expires = new Date();\n      // Trying to delete a cookie; set a date far in the past\n      if (expiresFor === -1) {\n        options.expires = new Date('Thu, 01 Jan 1970 00:00:00 GMT');\n      } else if (options.expirationUnit) {\n        if (options.expirationUnit === 'hours') {\n          options.expires.setHours(options.expires.getHours() + expiresFor);\n        } else if (options.expirationUnit === 'minutes') {\n          options.expires.setMinutes(options.expires.getMinutes() + expiresFor);\n        } else if (options.expirationUnit === 'seconds') {\n          options.expires.setSeconds(options.expires.getSeconds() + expiresFor);\n        } else if (options.expirationUnit === 'milliseconds') {\n          options.expires.setMilliseconds(options.expires.getMilliseconds() + expiresFor);\n        } else {\n          options.expires.setDate(options.expires.getDate() + expiresFor);\n        }\n      } else {\n        options.expires.setDate(options.expires.getDate() + expiresFor);\n      }\n    }\n    this.document.cookie = [\n      encodeURIComponent(cookieKey),\n      '=',\n      encodeURIComponent(value),\n      options.expires ? '; expires=' + options.expires.toUTCString() : '',\n      options.path ? '; path=' + options.path : '',\n      options.domain ? '; domain=' + options.domain : '',\n      options.secure ? '; secure' : ''\n    ].join('');\n  }\n\n  /**\n   * Key provided - returns value of given cookie or undefined if non existent\n   * Key not provided - returns all cookies as Object or undefined if there are no cookies\n   * Cookie values are JSON.parsed, if error occurs during parsing, string value is assigned\n   */\n  get(cookieKey?: string): any {\n    const cookieStringList: Array<String> = this.document.cookie ? this.document.cookie.split('; ') : [];\n\n    const cookieObject = cookieStringList\n      .map(cookieString => {\n        const pos = cookieString.indexOf('=');\n        return {\n          name: cookieString.substr(0, pos),\n          value: decodeURIComponent(cookieString.substr(pos + 1))\n        };\n      }).filter(cookie => {\n        return typeof cookie.value !== 'undefined' && (cookieKey === undefined || cookieKey === cookie.name);\n      }).reduce((previousValue: object, currentValue: { name: string, value: any }) => {\n        let value = null;\n        try {\n          value = JSON.parse(currentValue.value);\n        } catch (e) {\n          value = currentValue.value;\n        }\n        previousValue[currentValue.name] = value;\n        return previousValue;\n      }, {});\n    return cookieKey ? cookieObject[cookieKey] : Object.keys(cookieObject).length > 0 ? cookieObject : undefined;\n  }\n\n  remove(cookieKey: string, cookieOptions: LsnCookieOptions = {}) {\n    const cookie = this.get(cookieKey);\n\n    if (cookie) {\n      cookieOptions.expires = -1;\n      this.set(cookieKey, '', cookieOptions);\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","import {Inject, Injectable, OnDestroy, Optional} from '@angular/core';\nimport {interval, Observable, Subject, Subscription} from 'rxjs';\nimport {LsnCrossTabMessage} from './models/lsnCrossTabMessage';\nimport {LSN_CROSS_TAB_CONFIG, LsnCrossTabConfig} from './models/lsnCrossTabConfig';\nimport {LsnCookieService} from '../lsn-cookie/lsn-cookie.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LsnCrossTabService implements OnDestroy {\n  private readonly messageSubject: Subject<LsnCrossTabMessage>;\n  readonly tabId: string;\n  private readonly messagesReadSet: Set<string>;\n  private readonly tabOpenTime: number;\n  private cookieReadSubscription: Subscription;\n  private cookieCleanSubscription: Subscription;\n  private crossTabConfig: LsnCrossTabConfig;\n\n  private get crossTabCookieName(): string {\n    return this.crossTabConfig.crossTabCookieName;\n  }\n\n  constructor(private lsnCookieService: LsnCookieService,\n              @Optional() @Inject(LSN_CROSS_TAB_CONFIG) crossTabConfig: LsnCrossTabConfig) {\n    this.crossTabConfig = crossTabConfig || new LsnCrossTabConfig();\n    this.messageSubject = new Subject<LsnCrossTabMessage>();\n    this.tabId = Math.random() + '';\n    this.messagesReadSet = new Set<string>();\n    this.tabOpenTime = Date.now();\n  }\n\n  /**\n   * This function sets up subscriptions for reading and cleaning cross tab cookie\n   */\n  run(): void {\n    if (!this.cookieReadSubscription) {\n      this.cookieReadSubscription = interval(this.crossTabConfig.cookieReadFreq)\n        .subscribe(() => this.readMessages());\n    }\n    if (!this.cookieCleanSubscription) {\n      this.cookieCleanSubscription = interval(this.crossTabConfig.cookieCleanFreq)\n        .subscribe(() => this.cleanCookie());\n    }\n  }\n\n  /**\n   * This Observable emits messages that were sent by other tabs\n   */\n  get messages$(): Observable<LsnCrossTabMessage> {\n    return this.messageSubject;\n  }\n\n  /**\n   * Manually set cross tab config, for example when config must be provided asynchronously and not with InjectionToken\n   */\n  setCrossTabConfig(config: LsnCrossTabConfig) {\n    this.crossTabConfig = config;\n  }\n\n  /**\n   * Sends message to other tabs by adding this message to cross tab cookie\n   */\n  sendMessage(data: (string | LsnCrossTabMessage | object)) {\n    let message;\n    if (typeof data === 'string') {\n      message = new LsnCrossTabMessage({code: data});\n    } else if (data instanceof LsnCrossTabMessage) {\n      message = data;\n    } else if (!!data && typeof data === 'object' && !Array.isArray(data)) {\n      message = new LsnCrossTabMessage({...data});\n    } else {\n      return;\n    }\n    // previous implementation, message.created is always overridden\n    message.created = new Date().getTime();\n    message.tabId = this.tabId;\n    this.messagesReadSet.add(this.getMessageId(message));\n    this.updateCookie(this.messageToPlainObject(message));\n  }\n\n  /**\n   * Checks if message with given id was already read\n   */\n  private messageWasRead = (msg: LsnCrossTabMessage): boolean => this.messagesReadSet.has(this.getMessageId(msg));\n\n  private getMessageId = (message: LsnCrossTabMessage): string => message.tabId + message.created + message.code;\n\n  private messageToPlainObject = (msg: LsnCrossTabMessage): object => Object.keys(msg)\n    .reduce((minifiedObj, key) => {\n      const value = msg[key];\n      if (!(key === 'attrs' && (value === null))) {\n        minifiedObj[key] = value;\n        return minifiedObj;\n      } else {\n        return minifiedObj;\n      } // tslint:disable\n    }, {}); // tslint:enable\n\n  /**\n   * Appends given message to cross tab cookie value\n   */\n  private updateCookie(msg: object) {\n    const cookieData: Array<LsnCrossTabMessage> = this.cookie;\n    cookieData.push(msg);\n    this.cookie = cookieData;\n  }\n\n  private get cookie() {\n    return this.lsnCookieService.get(this.crossTabConfig.crossTabCookieName) || [];\n  }\n\n  private set cookie(cookieData: Array<LsnCrossTabMessage>) {\n    this.lsnCookieService.set(this.crossTabCookieName, cookieData, {\n      domain: this.crossTabConfig.rootDomain,\n      path: '/'\n    });\n  }\n\n  /**\n   * Removes messages from cross tab cookie that are older than supplied config.msgTtl time\n   */\n  private cleanCookie() {\n    const currentCookie = this.cookie;\n    if (currentCookie === null) {\n      return;\n    }\n\n    const timestamp = new Date().getTime();\n    const cleanedCookie = currentCookie.filter(this.cleanCookieFilter(timestamp, this.crossTabConfig.msgTtl));\n    // previous implementation, cookie might have been modified in the other tab?\n    if (!this.areCookiesEqual(currentCookie, this.cookie)) {\n      return;\n    }\n\n    this.cookie = cleanedCookie;\n  }\n\n  /**\n   * Callback invoked after every cookie read interval\n   */\n  private readMessages() {\n    if (this.cookie) {\n      this.cookie.forEach((msgData: LsnCrossTabMessage) => {\n        if (msgData.created > this.tabOpenTime) {\n          const msgCopy = {...msgData};\n          if (!this.messageWasRead(msgCopy)) {\n            this.messagesReadSet.add(this.getMessageId(msgCopy));\n            this.messageSubject.next(msgCopy);\n          }\n        }\n      });\n    }\n  }\n\n  getCookie = () => this.cookie;\n\n  /**\n   * Removes all subscriptions that this service is subscribe to (intervals are cleared)\n   */\n  unsubscribe() {\n    this.cookieReadSubscription.unsubscribe();\n    this.cookieCleanSubscription.unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe();\n  }\n\n  /**\n   * Sorts two cookie arrays and compares each element\n   */\n  private areCookiesEqual(firstCookie: Array<LsnCrossTabMessage>, secondCookie: Array<LsnCrossTabMessage>) {\n    if (firstCookie.length !== secondCookie.length) {\n      return false;\n    } else if (firstCookie.length === 0 && secondCookie.length === 0) {\n      return true;\n    }\n    firstCookie.sort(this.messageComparer);\n    secondCookie.sort(this.messageComparer);\n    let index = 0;\n    let areCookiesEqual = true;\n    for (const message of firstCookie) {\n      if (LsnCrossTabMessage.compare(message, secondCookie[index])) {\n        areCookiesEqual = false;\n      } else {\n        ++index;\n      }\n    }\n    return areCookiesEqual;\n  }\n\n  /**\n   * Compares two messages by properties in order: 'created', 'code', 'tabId';\n   */\n  private messageComparer(firstCookieValue: LsnCrossTabMessage, secondCookieValue: LsnCrossTabMessage) {\n    let result = firstCookieValue.created < secondCookieValue.created ? -1 : secondCookieValue.created < firstCookieValue.created ? 1 : 0;\n    if (result === 0) {\n      result = firstCookieValue.code < secondCookieValue.code ? -1 : secondCookieValue.code < firstCookieValue.code ? 1 : 0;\n      if (result === 0) {\n        result = firstCookieValue.tabId < secondCookieValue.tabId ? -1 : secondCookieValue.tabId < firstCookieValue.tabId ? 1 : 0;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Function determines whether given message is to be removed from the cross tab cookie\n   */\n  private cleanCookieFilter(timestamp: number, msgTtl: number) {\n    return (cookieMessage: LsnCrossTabMessage) => timestamp - cookieMessage.created <= msgTtl;\n  }\n\n}\n","/*\n * Public API Surface of lsn-libs\n */\n\n// whole module\nexport * from './lib/lsn-libs.module';\n\n// directives\nexport * from './lib/directives/capitalize/public_api';\nexport * from './lib/directives/latin-to-greek/public_api';\nexport * from './lib/directives/numeric/public_api';\nexport * from './lib/directives/numpad/public_api';\nexport * from './lib/directives/scroll-spy/public_api';\n\n// services\nexport * from './lib/services/lsn-cross-tab/public_api';\nexport * from './lib/services/lsn-cookie/public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.NumericConfigService"],"mappings":"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"}