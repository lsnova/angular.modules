{"version":3,"file":"lsnova-angularmodules-adv-chatbot.mjs","sources":["../../../projects/lsn-libs/adv-chatbot/adv-chatbot.model.ts","../../../projects/lsn-libs/adv-chatbot/adv-chatbot.helper.ts","../../../projects/lsn-libs/adv-chatbot/adv-chatbot.module.ts","../../../projects/lsn-libs/adv-chatbot/abstract-adv-chatbot.component.ts","../../../projects/lsn-libs/adv-chatbot/lsnova-angularmodules-adv-chatbot.ts"],"sourcesContent":["import {InjectionToken, Type} from '@angular/core';\nimport {Observable} from 'rxjs';\n\nexport const ADV_CHATBOT_CONFIG = new InjectionToken<AdvChatbotModuleConfig>('AdvChatbotModuleConfig');\n\nexport interface AdvChatbotModuleConfig {\n  dataProviders?: Type<AdvChatbotDataProvider>[];\n}\n\nexport interface AdvChatbotGlobal {\n  initWidget: (config: AdvChatbotGlobalConfig) => Promise<any>;\n}\n\nexport interface AdvChatbotWidget {\n  toggleWidget: () => void;\n  hideWidget: () => void;\n  showWidget: () => void;\n}\n\nexport enum AdvChatbotEvents {\n  newMessage = 'newMessage'\n}\n\nexport interface AdvChatbotEvent {\n  type: AdvChatbotEvents;\n  value: any;\n}\n\nexport interface AdvChatbotDataProvider {\n  getData(chatBotConfig: AdvChatbotWidgetConfig): Observable<object>;\n}\n\nexport class AdvChatbotWidgetConfig {\n  enabled?: boolean;\n  sdkUrl?: string;\n  cid?: string;\n  baseUrl?: string;\n  audioFile?: string;\n  layout?: any;\n  theme?: { [key: string]: string };\n  translations?: { [key: string]: string };\n}\n\nexport interface AdvChatbotGlobalConfig extends AdvChatbotWidgetConfig {\n  getCustomerData: (done: (err, data) => void) => void;\n  newMessageEvent: (boolean) => void;\n}\n\n","import {Inject, Injectable, Injector, Optional, Renderer2, RendererFactory2} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  ADV_CHATBOT_CONFIG,\n  AdvChatbotDataProvider,\n  AdvChatbotEvent,\n  AdvChatbotEvents,\n  AdvChatbotGlobal,\n  AdvChatbotModuleConfig,\n  AdvChatbotWidget,\n  AdvChatbotWidgetConfig\n} from './adv-chatbot.model';\nimport {forkJoin, Observable, Subject} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n@Injectable()\nexport class AdvChatbotHelper {\n\n  protected renderer: Renderer2;\n  protected widget: AdvChatbotWidget;\n  protected events$ = new Subject<AdvChatbotEvent>();\n  protected dataProviders: AdvChatbotDataProvider[] = [];\n\n  get events(): Observable<AdvChatbotEvent> {\n    return this.events$.asObservable();\n  }\n\n  get isInitialized() {\n    return !!this.widget;\n  }\n\n  constructor(@Inject(DOCUMENT) protected document,\n              rendererFactory2: RendererFactory2,\n              @Optional() @Inject(ADV_CHATBOT_CONFIG) protected moduleConfig: AdvChatbotModuleConfig,\n              protected injector: Injector) {\n    this.renderer = rendererFactory2.createRenderer(document, null);\n    if (this.moduleConfig?.dataProviders?.length) {\n      for (const providerClass of this.moduleConfig.dataProviders) {\n        this.dataProviders.push(this.injector.get(providerClass));\n      }\n    }\n  }\n\n  async setupSdk(config: AdvChatbotWidgetConfig, awaitConfig = false) {\n    if (config.sdkUrl) {\n      await this.loadScript(config.sdkUrl);\n      const advGlobal: AdvChatbotGlobal = (this.document.defaultView as any).ADV;\n      const configPromise = this.setConfig(advGlobal, config);\n      if (awaitConfig) {\n        await configPromise;\n      }\n    }\n  }\n\n  protected loadScript(scriptUrl: string): Promise<any> {\n    return new Promise((resolve => {\n      const chatBotScriptFound = this.checkScriptLoaded(scriptUrl);\n      if (!chatBotScriptFound) {\n        const script: HTMLScriptElement = this.renderer.createElement('script');\n        this.renderer.appendChild(document.head, script);\n        script.type = 'text/javascript';\n        script.async = false;\n        script.charset = 'utf-8';\n        // load listener first in case script is cached\n        script.addEventListener('load', () => {\n          resolve(true);\n        });\n        script.src = scriptUrl;\n      } else {\n        resolve(true);\n      }\n    }));\n  }\n\n  /**\n   * check if any script on page includes one with src = apiUrl\n   */\n  protected checkScriptLoaded(scriptUrl: string): boolean {\n    const scripts: HTMLCollection = this.document.getElementsByTagName('script');\n    return Array.from(scripts)?.some((scriptEl: HTMLScriptElement) => scriptEl.src?.includes(scriptUrl)) ?? false;\n  }\n\n  protected async setConfig(advGlobal: AdvChatbotGlobal, chatbotConfig: AdvChatbotWidgetConfig) {\n    this.widget = await advGlobal.initWidget({\n      cid: chatbotConfig.cid,\n      baseUrl: chatbotConfig.baseUrl,\n      layout: chatbotConfig.layout,\n      theme: chatbotConfig.theme,\n      translations: chatbotConfig.translations,\n      getCustomerData: done => {\n        this.getDataForWidget(chatbotConfig)\n          .subscribe({\n            // check status 200?\n            next: resp => {\n              done(null, resp);\n            },\n            error: err => done(err, null)\n          });\n      },\n      newMessageEvent: isWidgetOpen => {\n        this.events$.next({\n          type: AdvChatbotEvents.newMessage,\n          value: !isWidgetOpen // mark new message as unread\n        });\n      }\n    });\n  }\n\n  /**\n   * manual click on chatbot icon, setup sdk if not loaded\n   */\n  async toggleVisibility(config: AdvChatbotWidgetConfig): Promise<any> {\n    if (this.widget) {\n      this.widget.toggleWidget();\n    } else {\n      await this.setupSdk(config, true);\n      this.widget.toggleWidget();\n    }\n  }\n\n  protected getDataForWidget(chatbotConfig: AdvChatbotWidgetConfig): Observable<object> {\n    const obs$: Observable<object>[] = this.dataProviders?.map(provider => provider.getData(chatbotConfig));\n    return forkJoin(obs$).pipe(\n      map(outputs => Object.assign({}, ...outputs))\n    );\n  }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ADV_CHATBOT_CONFIG, AdvChatbotModuleConfig} from './adv-chatbot.model';\nimport {AdvChatbotHelper} from './adv-chatbot.helper';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ]\n})\nexport class LsnAdvChatbotModule {\n  static forRoot(config: AdvChatbotModuleConfig = {}): ModuleWithProviders<LsnAdvChatbotModule> {\n    return {\n      ngModule: LsnAdvChatbotModule,\n      providers: [\n        {provide: ADV_CHATBOT_CONFIG, useValue: config},\n        AdvChatbotHelper\n      ]\n    };\n  }\n}\n","import {ChangeDetectorRef, Component, OnDestroy, OnInit} from '@angular/core';\nimport {AdvChatbotHelper} from './adv-chatbot.helper';\nimport {Subscription} from 'rxjs';\nimport {AdvChatbotEvent, AdvChatbotEvents, AdvChatbotWidgetConfig} from './adv-chatbot.model';\n\n@Component({\n  template: '',\n  standalone: false\n})\nexport abstract class AbstractAdvChatbotComponent implements OnInit, OnDestroy {\n\n  protected eventsSub: Subscription;\n  unreadMessages = false;\n  abstract audioSrc: string;\n  protected audio: HTMLAudioElement;\n\n  constructor(protected chatBotHelper: AdvChatbotHelper,\n              protected cd: ChangeDetectorRef) {\n  }\n\n  ngOnInit() {\n    this.audio = new Audio(this.audioSrc);\n    this.eventsSub = this.chatBotHelper.events\n      .subscribe(this.handleEvent.bind(this));\n  }\n\n  toggleVisibility(config: AdvChatbotWidgetConfig) {\n    // when opening widget, remove unread messages mark\n    this.unreadMessages = false;\n    this.chatBotHelper.toggleVisibility(config);\n  }\n\n  playAudio() {\n    if (this.audio.paused) {\n      this.audio.play();\n    } else {\n      // if audio is playing, reset it (immediately plays again)\n      this.audio.currentTime = 0;\n    }\n  }\n\n  protected handleEvent(event: AdvChatbotEvent) {\n    if (event.type === AdvChatbotEvents.newMessage) {\n      this.unreadMessages = event.value;\n      this.playAudio();\n    }\n    this.cd.markForCheck();\n  }\n\n  ngOnDestroy() {\n    this.eventsSub?.unsubscribe();\n  }\n\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.AdvChatbotHelper"],"mappings":"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"}